{"version":3,"file":"static/js/main.8efc6c97.js","mappings":"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","sources":["src/firebase.ts","src/context/AuthProvider.tsx","src/config/piConfig.ts","src/screens/AuthScreen.tsx","src/api/chords.ts","src/context/ThemeContext.tsx","src/utils/chordLibrary.ts","src/components/CompactRhythmTimeline.tsx","src/components/EmbeddedRhythmSheet.tsx","src/components/Fretboard.Enhanced.tsx","src/components/UnifiedYouTubePlayer.tsx","src/components/SynchronizedChordPlayer.tsx","src/screens/ChordPlayerScreen.tsx","src/screens/HomeScreen.tsx","src/screens/LibraryScreen.tsx","src/api/youtube.ts","src/screens/SearchScreen.tsx","src/screens/SettingsScreen.tsx","src/navigation/RootStack.tsx","index.ts","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// src/firebase.ts\r\nimport Constants from 'expo-constants';\r\nimport { getApps, initializeApp } from 'firebase/app';\r\nimport {\r\n    Auth,\r\n    getAuth,\r\n    GoogleAuthProvider\r\n} from 'firebase/auth';\r\n\r\n// Firebase configuration with multiple fallback sources\r\nconst getFirebaseConfig = () => {\r\n  // Try to get from Constants (app.config.js)\r\n  const fromConstants = Constants.expoConfig?.extra;\r\n  \r\n  // Create config object\r\n  const config = {\r\n    apiKey: fromConstants?.FIREBASE_API_KEY || \r\n            process.env.EXPO_PUBLIC_FIREBASE_API_KEY || \r\n            process.env.FIREBASE_API_KEY || \r\n            \"your-firebase-api-key-here\",\r\n            \r\n    authDomain: fromConstants?.FIREBASE_AUTH_DOMAIN || \r\n                process.env.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN || \r\n                process.env.FIREBASE_AUTH_DOMAIN || \r\n                \"chords-legend.firebaseapp.com\",\r\n                \r\n    projectId: fromConstants?.FIREBASE_PROJECT_ID || \r\n               process.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID || \r\n               process.env.FIREBASE_PROJECT_ID || \r\n               \"chords-legend\",\r\n               \r\n    storageBucket: fromConstants?.FIREBASE_STORAGE_BUCKET || \r\n                   process.env.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET || \r\n                   process.env.FIREBASE_STORAGE_BUCKET || \r\n                   \"chords-legend.firebasestorage.app\",\r\n                   \r\n    messagingSenderId: fromConstants?.FIREBASE_MESSAGING_SENDER_ID || \r\n                       process.env.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || \r\n                       process.env.FIREBASE_MESSAGING_SENDER_ID || \r\n                       \"509802787175\",\r\n                       \r\n    appId: fromConstants?.FIREBASE_APP_ID || \r\n           process.env.EXPO_PUBLIC_FIREBASE_APP_ID || \r\n           process.env.FIREBASE_APP_ID || \r\n           \"1:509802787175:android:983791faee41272ef5bfc2\"\r\n  };\r\n  \r\n  return config;\r\n};\r\n\r\nconst firebaseConfig = getFirebaseConfig();\r\n\r\n// Enhanced configuration validation\r\nconst validateFirebaseConfig = (config: any) => {\r\n  const required = ['apiKey', 'authDomain', 'projectId'];\r\n  const missing = required.filter(key => !config[key]);\r\n  \r\n  if (missing.length > 0) {\r\n    console.error('Missing Firebase configuration:', missing);\r\n    return false;\r\n  }\r\n  \r\n  console.log('Firebase configuration validated successfully');\r\n  return true;\r\n};\r\n\r\n// Debug: Log the config to see what's being loaded\r\nconsole.log('Firebase Config loaded:', {\r\n  ...firebaseConfig,\r\n  apiKey: firebaseConfig.apiKey ? `${firebaseConfig.apiKey.substring(0, 10)}...` : 'missing'\r\n});\r\n\r\n// Debug: Log what's available from each source\r\nconst fromConstants = Constants.expoConfig?.extra;\r\nconsole.log('Firebase config sources:');\r\nconsole.log('- Constants.expoConfig?.extra:', fromConstants ? Object.keys(fromConstants).filter(k => k.includes('FIREBASE')) : 'not available');\r\nconsole.log('- process.env EXPO_PUBLIC_:', {\r\n  EXPO_PUBLIC_FIREBASE_API_KEY: process.env.EXPO_PUBLIC_FIREBASE_API_KEY ? 'found' : 'missing',\r\n  EXPO_PUBLIC_FIREBASE_PROJECT_ID: process.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID ? 'found' : 'missing'\r\n});\r\nconsole.log('- process.env regular:', {\r\n  FIREBASE_API_KEY: process.env.FIREBASE_API_KEY ? 'found' : 'missing',\r\n  FIREBASE_PROJECT_ID: process.env.FIREBASE_PROJECT_ID ? 'found' : 'missing'\r\n});\r\n\r\n// Validate configuration\r\nconst isConfigValid = validateFirebaseConfig(firebaseConfig);\r\nif (!isConfigValid) {\r\n  console.error('Firebase configuration is incomplete');\r\n  console.log('Available extra config keys:', Object.keys(Constants.expoConfig?.extra || {}));\r\n}\r\n\r\n// Initialize Firebase\r\nlet app: any;\r\nlet auth: Auth;\r\n\r\ntry {\r\n  // Check if app already exists\r\n  if (getApps().length === 0) {\r\n    app = initializeApp(firebaseConfig);\r\n    console.log('Firebase app initialized successfully');\r\n  } else {\r\n    app = getApps()[0];\r\n    console.log('Using existing Firebase app');\r\n  }\r\n  \r\n  // Initialize Firebase Auth with AsyncStorage persistence\r\n  try {\r\n    // For React Native, we need to use a different approach for persistence\r\n    auth = getAuth(app);\r\n    console.log('Firebase Auth initialized successfully');\r\n  } catch (error: any) {\r\n    console.error('Failed to initialize Firebase Auth:', error);\r\n    throw error;\r\n  }\r\n  \r\n} catch (error) {\r\n  console.error('Failed to initialize Firebase:', error);\r\n  throw new Error(`Firebase initialization failed: ${error instanceof Error ? error.message : String(error)}`);\r\n}\r\n\r\n// Test Firebase connection\r\nexport const testFirebaseConnection = async (): Promise<boolean> => {\r\n  try {\r\n    console.log('Starting Firebase connection test...');\r\n    \r\n    if (!auth) {\r\n      console.error('Firebase Auth not initialized');\r\n      return false;\r\n    }\r\n    \r\n    // Test 1: Check if Firebase configuration is valid\r\n    const config = auth.app.options;\r\n    if (!config.apiKey || !config.authDomain || !config.projectId) {\r\n      console.error('Firebase configuration is incomplete');\r\n      return false;\r\n    }\r\n    console.log('✅ Firebase configuration is complete');\r\n    \r\n    // Test 2: Try to make a basic request to Firebase Auth API\r\n    try {\r\n      console.log('Testing Firebase Auth API connectivity...');\r\n      const testUrl = `https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${config.apiKey}`;\r\n      const response = await fetch(testUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({})\r\n      });\r\n      \r\n      console.log('Firebase API response status:', response.status);\r\n      \r\n      if (response.status === 400) {\r\n        // A 400 error with \"INVALID_ID_TOKEN\" or similar means Firebase is reachable\r\n        const errorText = await response.text();\r\n        console.log('✅ Firebase Auth API is reachable (expected 400 error):', errorText);\r\n        return true;\r\n      } else if (response.status === 200) {\r\n        console.log('✅ Firebase Auth API responded successfully');\r\n        return true;\r\n      } else if (response.status === 403) {\r\n        console.log('⚠️ Firebase API key might be restricted, but service is reachable');\r\n        return true; // API key restrictions don't mean Firebase is down\r\n      } else {\r\n        console.error('Firebase Auth API returned unexpected status:', response.status);\r\n        const errorText = await response.text();\r\n        console.error('Response body:', errorText);\r\n        return false;\r\n      }\r\n    } catch (networkError) {\r\n      console.error('Network request to Firebase failed:', networkError);\r\n      \r\n      // Check if it's a network connectivity issue\r\n      try {\r\n        await fetch('https://www.google.com', { \r\n          method: 'HEAD', \r\n          mode: 'no-cors',\r\n          cache: 'no-cache'\r\n        });\r\n        console.log('✅ Internet connection is working');\r\n        console.error('❌ Specific issue connecting to Firebase');\r\n      } catch (internetError) {\r\n        console.error('❌ No internet connection');\r\n      }\r\n      \r\n      // Even if the network test fails, try to validate that Firebase Auth is at least initialized\r\n      console.log('Attempting fallback test: checking if Firebase Auth is accessible...');\r\n      try {\r\n        const authInstance = getAuth();\r\n        if (authInstance && authInstance.app) {\r\n          console.log('✅ Firebase Auth instance is accessible (fallback success)');\r\n          return true;\r\n        }\r\n      } catch (fallbackError) {\r\n        console.error('❌ Firebase Auth instance not accessible:', fallbackError);\r\n      }\r\n      \r\n      return false;\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Firebase connection test failed:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { auth, GoogleAuthProvider };\r\n\r\nexport const getAuthInstance = () => {\r\n  if (!auth) {\r\n    throw new Error('Firebase Auth not initialized. Check your Firebase configuration.');\r\n  }\r\n  return auth;\r\n};","// src/context/AuthProvider.tsx\r\nimport { createUserWithEmailAndPassword, onAuthStateChanged, signInWithEmailAndPassword, signOut, User } from 'firebase/auth';\r\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\r\nimport { getAuthInstance, testFirebaseConnection } from '../firebase';\r\n\r\ntype AuthContextType = {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  login: (email: string, password: string) => Promise<User | null>;\r\n  signUp: (email: string, password: string) => Promise<User | null>;\r\n  logout: () => Promise<void>;\r\n  clearError: () => void;\r\n  isConnected: boolean;\r\n  forceConnectionState: (connected: boolean) => void; // Debug function\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  isLoading: true,\r\n  error: null,\r\n  login: async () => null,\r\n  signUp: async () => null,\r\n  logout: async () => {},\r\n  clearError: () => {},\r\n  isConnected: false,\r\n  forceConnectionState: () => {}, // Debug function\r\n});\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  // Debug: Add provider instance ID\r\n  const providerInstanceId = Math.random().toString(36).substring(7);\r\n  console.log(`AuthProvider instance created: ${providerInstanceId}`);\r\n\r\n  // Test Firebase connection on mount\r\n  useEffect(() => {\r\n    const checkConnection = async () => {\r\n      console.log(`AuthProvider [${providerInstanceId}]: Starting Firebase setup...`);\r\n      \r\n      try {\r\n        // Step 1: Initialize Firebase Auth\r\n        console.log(`AuthProvider [${providerInstanceId}]: Getting Firebase Auth instance...`);\r\n        const auth = getAuthInstance();\r\n        console.log(`AuthProvider [${providerInstanceId}]: ✅ Firebase Auth instance obtained`);\r\n        \r\n        // Step 2: Set up auth state listener (this is the key to Firebase working)\r\n        console.log(`AuthProvider [${providerInstanceId}]: Setting up auth state listener...`);\r\n        const unsubscribe = onAuthStateChanged(\r\n          auth, \r\n          (user) => {\r\n            // Auth listener successfully working = Firebase is connected\r\n            console.log(`AuthProvider [${providerInstanceId}]: Auth state changed:`, user ? `User: ${user.email}` : 'No user');\r\n            \r\n            // Update all states in one go\r\n            setUser(user);\r\n            setIsLoading(false);\r\n            setIsConnected(true); // Auth listener working = Firebase connected\r\n            setError(null);\r\n            \r\n            console.log(`AuthProvider [${providerInstanceId}]: ✅ Successfully updated states - Connected: true`);\r\n          },\r\n          (authError) => {\r\n            console.error(`AuthProvider [${providerInstanceId}]: Auth state error:`, authError);\r\n            setError(`Authentication error: ${authError.message}`);\r\n            setIsLoading(false);\r\n            setIsConnected(false);\r\n          }\r\n        );\r\n        \r\n        console.log(`AuthProvider [${providerInstanceId}]: ✅ Auth listener set up successfully`);\r\n        \r\n        // Step 3: Test connection (optional, for debugging)\r\n        try {\r\n          const connectionTest = await testFirebaseConnection();\r\n          console.log(`AuthProvider [${providerInstanceId}]: Connection test result: ${connectionTest}`);\r\n        } catch (testError) {\r\n          console.log(`AuthProvider [${providerInstanceId}]: Connection test failed, but auth listener is working`);\r\n        }\r\n        \r\n        return unsubscribe;\r\n        \r\n      } catch (error) {\r\n        console.error(`AuthProvider [${providerInstanceId}]: Setup failed:`, error);\r\n        setError(error instanceof Error ? error.message : 'Firebase setup failed');\r\n        setIsLoading(false);\r\n        setIsConnected(false);\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n  }, [providerInstanceId]);\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  const login = useCallback(async (email: string, password: string) => {\r\n    try {\r\n      setError(null);\r\n      setIsLoading(true);\r\n      \r\n      // Validate input\r\n      if (!email || !password) {\r\n        throw new Error('Email and password are required');\r\n      }\r\n      \r\n      // Ensure we can get the auth instance\r\n      const auth = getAuthInstance();\r\n      if (!auth) {\r\n        throw new Error('Firebase Auth not initialized');\r\n      }\r\n      \r\n      // Log debugging info\r\n      console.log(`Attempting login for user: ${email}`);\r\n      \r\n      // Attempt login\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user);\r\n      console.log('Login successful for user:', userCredential.user.email);\r\n      return userCredential.user;\r\n      \r\n    } catch (error: any) {\r\n      console.error('Login error:', error);\r\n      console.error('Error code:', error.code);\r\n      console.error('Error message:', error.message);\r\n      \r\n      const errorMessage = getFirebaseErrorMessage(error);\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const signUp = useCallback(async (email: string, password: string) => {\r\n    try {\r\n      setError(null);\r\n      setIsLoading(true);\r\n      \r\n      // Validate input\r\n      if (!email || !password) {\r\n        throw new Error('Email and password are required');\r\n      }\r\n      \r\n      const auth = getAuthInstance();\r\n      if (!auth) {\r\n        throw new Error('Firebase Auth not initialized');\r\n      }\r\n      \r\n      // Log debugging info\r\n      console.log(`Attempting signup for user: ${email}`);\r\n      \r\n      // Attempt signup\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      setUser(userCredential.user);\r\n      console.log('Sign up successful for user:', userCredential.user.email);\r\n      return userCredential.user;\r\n      \r\n    } catch (error: any) {\r\n      console.error('SignUp error:', error);\r\n      console.error('Error code:', error.code);\r\n      console.error('Error message:', error.message);\r\n      \r\n      const errorMessage = getFirebaseErrorMessage(error);\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(async () => {\r\n    try {\r\n      setError(null);\r\n      \r\n      const auth = getAuthInstance();\r\n      if (!auth) {\r\n        throw new Error('Firebase Auth not initialized');\r\n      }\r\n      \r\n      await signOut(auth);\r\n      setUser(null);\r\n      console.log('Logout successful');\r\n      \r\n    } catch (error: any) {\r\n      console.error('Logout error:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Logout failed';\r\n      setError(errorMessage);\r\n      throw new Error(errorMessage);\r\n    }\r\n  }, []);\r\n\r\n  // Debug function to manually force connection state\r\n  const forceConnectionState = useCallback((connected: boolean) => {\r\n    console.log(`AuthProvider [${providerInstanceId}]: Force setting isConnected to ${connected}`);\r\n    setIsConnected(connected);\r\n    setIsLoading(false);\r\n    if (connected) {\r\n      setError(null);\r\n    }\r\n  }, [providerInstanceId]);\r\n\r\n  const value = {\r\n    user,\r\n    isLoading,\r\n    error,\r\n    login,\r\n    signUp,\r\n    logout,\r\n    clearError,\r\n    isConnected,\r\n    forceConnectionState, // Debug function\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n// Helper function to get user-friendly Firebase error messages\r\nconst getFirebaseErrorMessage = (error: any): string => {\r\n  if (!error?.code) {\r\n    return error?.message || 'An unexpected error occurred';\r\n  }\r\n\r\n  switch (error.code) {\r\n    case 'auth/email-already-in-use':\r\n      return 'An account with this email already exists. Try logging in instead.';\r\n    case 'auth/weak-password':\r\n      return 'Password is too weak. Please choose a stronger password.';\r\n    case 'auth/invalid-email':\r\n      return 'Please enter a valid email address.';\r\n    case 'auth/user-not-found':\r\n      return 'No account found with this email. Try signing up instead.';\r\n    case 'auth/wrong-password':\r\n      return 'Incorrect password. Please try again.';\r\n    case 'auth/too-many-requests':\r\n      return 'Too many failed attempts. Please try again later.';\r\n    case 'auth/network-request-failed':\r\n      return 'Network error. Please check your connection and try again.';\r\n    case 'auth/invalid-credential':\r\n      return 'Invalid email or password. Please check your credentials.';\r\n    case 'auth/user-disabled':\r\n      return 'This account has been disabled. Please contact support.';\r\n    case 'auth/operation-not-allowed':\r\n      return 'Email/password accounts are not enabled. Please contact support.';\r\n    default:\r\n      return error.message || 'An authentication error occurred. Please try again.';\r\n  }\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  // Debug: Log when hook is called and what it returns\r\n  const debugInfo = {\r\n    isConnected: context.isConnected,\r\n    isLoading: context.isLoading,\r\n    user: context.user ? 'logged in' : 'not logged in',\r\n    error: context.error ? 'has error' : 'no error',\r\n    timestamp: new Date().toLocaleTimeString()\r\n  };\r\n  \r\n  console.log(`useAuth called:`, debugInfo);\r\n  \r\n  return context;\r\n};","// Pi Network Integration Configuration\r\nexport const PI_CONFIG = {\r\n  // Pi Network App Configuration\r\n  APP_NAME: 'ChordsLegend',\r\n  APP_USERNAME: 'chordslegend', // Your Pi app username\r\n  \r\n  // IMPORTANT: Pi Network Sandbox Configuration\r\n  // Set SANDBOX_MODE to true for Pi Network testing\r\n  SANDBOX_MODE: true,\r\n  \r\n  // Pi Network Environment Detection\r\n  ENVIRONMENT: (typeof window !== 'undefined' && \r\n    (window.location.href.includes('sandbox.minepi.com') || \r\n     window.location.href.includes('pi.network'))) ? 'sandbox' : \r\n    (__DEV__ ? 'development' : 'production'),\r\n  \r\n  // Pi SDK Configuration\r\n  API_KEY: process.env.PI_API_KEY || '',\r\n  \r\n  // Sandbox URLs\r\n  SANDBOX_URL: 'https://sandbox.minepi.com/app/chords-legend',\r\n  SANDBOX_API_BASE: 'https://api.sandbox.minepi.com',\r\n  \r\n  // Pi Browser Detection\r\n  isPiBrowser: () => {\r\n    return (\r\n      typeof window !== 'undefined' && \r\n      (\r\n        window.navigator.userAgent.includes('PiBrowser') ||\r\n        window.location.hostname.includes('minepi.com') ||\r\n        window.location.hostname.includes('pi.network') ||\r\n        window.Pi !== undefined ||\r\n        window.location.href.includes('sandbox.minepi.com')\r\n      )\r\n    );\r\n  },\r\n  \r\n  // SDK Configuration\r\n  SDK_CONFIG: {\r\n    version: \"2.0\",\r\n    sandbox: true, // Always true for initial submission testing\r\n    environment: 'sandbox'\r\n  },\r\n  \r\n  // App Configuration for Pi Network\r\n  APP_CONFIG: {\r\n    appName: 'ChordsLegend',\r\n    developerId: 'chordslegend',\r\n    appSecret: process.env.PI_APP_SECRET || '',\r\n    scopes: ['payments', 'username']\r\n  },\r\n  \r\n  // Sandbox-specific features for testing\r\n  SANDBOX_FEATURES: {\r\n    // Test features with small Pi amounts\r\n    TEST_PREMIUM: {\r\n      price: 0.01, // Small amount for testing\r\n      name: 'Test Premium Feature',\r\n      description: 'Test Pi payment functionality'\r\n    }\r\n  },\r\n  \r\n  // App-specific Pi features\r\n  FEATURES: {\r\n    // Premium features that require Pi payments\r\n    PREMIUM_CHORD_LIBRARY: {\r\n      price: 1.0, // 1 Pi\r\n      name: 'Premium Chord Library',\r\n      description: 'Access to advanced chord progressions and techniques'\r\n    },\r\n    \r\n    AI_CHORD_DETECTION: {\r\n      price: 2.0, // 2 Pi\r\n      name: 'AI Chord Detection',\r\n      description: 'Real-time audio analysis and chord recognition'\r\n    },\r\n    \r\n    YOUTUBE_SYNC: {\r\n      price: 1.5, // 1.5 Pi\r\n      name: 'YouTube Synchronization',\r\n      description: 'Sync chord progressions with YouTube videos'\r\n    },\r\n    \r\n    OFFLINE_MODE: {\r\n      price: 0.5, // 0.5 Pi\r\n      name: 'Offline Mode',\r\n      description: 'Download chord libraries for offline practice'\r\n    }\r\n  },\r\n  \r\n  // Pi Network URLs\r\n  URLS: {\r\n    DEVELOPER_PORTAL: 'https://developers.minepi.com/',\r\n    APP_DETAILS: 'https://developers.minepi.com/apps/chordslegend',\r\n    PI_BROWSER: 'https://app-cdn.minepi.com/mobile-app-ui/'\r\n  }\r\n};\r\n\r\n// Pi Network payment types\r\nexport type PiFeature = keyof typeof PI_CONFIG.FEATURES;\r\n\r\nexport interface PiPayment {\r\n  amount: number;\r\n  memo: string;\r\n  metadata: {\r\n    feature: PiFeature;\r\n    userId: string;\r\n    timestamp: number;\r\n  };\r\n}\r\n\r\nexport interface PiUser {\r\n  uid: string;\r\n  username: string;\r\n  accessToken: string;\r\n  payments: PiPayment[];\r\n}\r\n","import { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  ActivityIndicator, KeyboardAvoidingView,\r\n  Platform, ScrollView, StyleSheet, Text,\r\n  TextInput,\r\n  TouchableOpacity, View\r\n} from 'react-native';\r\nimport { useAuth } from '../context/AuthProvider';\r\nimport { RootStackParamList } from '../navigation/types';\r\n\r\ntype AuthScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Auth'>;\r\n\r\nexport default function AuthScreen() {\r\n  const navigation = useNavigation<AuthScreenNavigationProp>();\r\n  const route = useRoute();\r\n  const { mode } = route.params as { mode?: 'login' | 'signup' } || {};\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLogin, setIsLogin] = useState(mode === 'signup' ? false : true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({ email: '', password: '', general: '' });\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const { login, signUp, error: authError, clearError, isConnected, isLoading: authLoading, user } = useAuth();\r\n\r\n  // Navigate to Home when user successfully logs in\r\n  useEffect(() => {\r\n    if (user && !loading) {\r\n      setSuccessMessage(isLogin ? 'Login successful! Redirecting...' : 'Account created! Redirecting...');\r\n      // Small delay to show success before navigation\r\n      setTimeout(() => {\r\n        navigation.replace('Home');\r\n      }, 1500);\r\n    }\r\n  }, [user, loading, navigation, isLogin]);\r\n\r\n  // Clear errors when switching between login/signup\r\n  useEffect(() => {\r\n    setErrors({ email: '', password: '', general: '' });\r\n    setSuccessMessage('');\r\n    clearError();\r\n  }, [isLogin, clearError]);\r\n\r\n  // Show auth errors from context\r\n  useEffect(() => {\r\n    if (authError) {\r\n      setErrors(prev => ({ ...prev, general: authError }));\r\n    }\r\n  }, [authError]);\r\n\r\n  const validateEmail = (email: string) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password: string) => {\r\n    if (password.length < 6) {\r\n      return 'Password must be at least 6 characters long';\r\n    }\r\n    if (!isLogin && password.length < 8) {\r\n      return 'Password should be at least 8 characters for better security';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handleAuth = async () => {\r\n    // Clear previous errors\r\n    setErrors({ email: '', password: '', general: '' });\r\n    clearError();\r\n\r\n    // Validate inputs\r\n    if (!email.trim()) {\r\n      setErrors(prev => ({ ...prev, email: 'Email is required' }));\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setErrors(prev => ({ ...prev, email: 'Please enter a valid email address' }));\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      setErrors(prev => ({ ...prev, password: 'Password is required' }));\r\n      return;\r\n    }\r\n\r\n    const passwordError = validatePassword(password);\r\n    if (passwordError && !isLogin) {\r\n      setErrors(prev => ({ ...prev, password: passwordError }));\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    try {\r\n      if (isLogin) {\r\n        await login(email.trim(), password);\r\n      } else {\r\n        await signUp(email.trim(), password);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Auth error:', error);\r\n      // Error is already handled by AuthProvider context\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView \r\n      style={styles.container}\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n    >\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.formContainer}>\r\n          <Text style={styles.title}>ChordsLegend</Text>\r\n          <Text style={styles.subtitle}>\r\n            {isLogin ? 'Welcome back!' : 'Join the community'}\r\n          </Text>\r\n\r\n          {/* Connection Status - Only show if not connected */}\r\n          {!isConnected && (\r\n            <View style={styles.statusContainer}>\r\n              <Text style={[styles.statusText, { color: '#ff6b6b' }]}>\r\n                Connection issue - Please check your internet\r\n              </Text>\r\n            </View>\r\n          )}\r\n\r\n          {/* Mode Toggle Buttons */}\r\n          <View style={styles.modeToggle}>\r\n            <TouchableOpacity\r\n              style={[styles.modeButton, isLogin && styles.modeButtonActive]}\r\n              onPress={() => {\r\n                setIsLogin(true);\r\n                setErrors({ email: '', password: '', general: '' });\r\n              }}\r\n            >\r\n              <Text style={[styles.modeButtonText, isLogin && styles.modeButtonTextActive]}>\r\n                Login\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={[styles.modeButton, !isLogin && styles.modeButtonActive]}\r\n              onPress={() => {\r\n                setIsLogin(false);\r\n                setErrors({ email: '', password: '', general: '' });\r\n              }}\r\n            >\r\n              <Text style={[styles.modeButtonText, !isLogin && styles.modeButtonTextActive]}>\r\n                Sign Up\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* Success Message */}\r\n          {successMessage ? (\r\n            <View style={styles.successContainer}>\r\n              <Text style={styles.successText}>{successMessage}</Text>\r\n            </View>\r\n          ) : null}\r\n\r\n          {/* General Error Message */}\r\n          {errors.general ? (\r\n            <View style={styles.errorContainer}>\r\n              <Text style={styles.errorText}>{errors.general}</Text>\r\n            </View>\r\n          ) : null}\r\n\r\n          <TextInput\r\n            style={[styles.input, errors.email && styles.inputError]}\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"#888\"\r\n            value={email}\r\n            onChangeText={(text) => {\r\n              setEmail(text);\r\n              if (errors.email) {\r\n                setErrors(prev => ({ ...prev, email: '' }));\r\n              }\r\n            }}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            autoComplete=\"email\"\r\n          />\r\n          {errors.email ? <Text style={styles.fieldErrorText}>{errors.email}</Text> : null}\r\n\r\n          <TextInput\r\n            style={[styles.input, errors.password && styles.inputError]}\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"#888\"\r\n            value={password}\r\n            onChangeText={(text) => {\r\n              setPassword(text);\r\n              if (errors.password) {\r\n                setErrors(prev => ({ ...prev, password: '' }));\r\n              }\r\n            }}\r\n            secureTextEntry\r\n            autoComplete=\"password\"\r\n          />\r\n          {errors.password ? <Text style={styles.fieldErrorText}>{errors.password}</Text> : null}\r\n\r\n          {/* Password Requirements for Signup */}\r\n          {!isLogin && (\r\n            <View style={styles.passwordRequirements}>\r\n              <Text style={styles.requirementsTitle}>Password Requirements:</Text>\r\n              <Text style={[styles.requirementText, password.length >= 6 && styles.requirementMet]}>\r\n                • At least 6 characters\r\n              </Text>\r\n              <Text style={[styles.requirementText, password.length >= 8 && styles.requirementMet]}>\r\n                • Recommended: 8+ characters for better security\r\n              </Text>\r\n            </View>\r\n          )}\r\n\r\n          {/* Enhanced Auth Button with better UX */}\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.button, \r\n              loading && styles.buttonDisabled,\r\n              !isConnected && styles.buttonWarning\r\n            ]}\r\n            onPress={handleAuth}\r\n            disabled={loading || !isConnected}\r\n          >\r\n            {loading ? (\r\n              <View style={styles.loadingContainer}>\r\n                <ActivityIndicator size=\"small\" color=\"#fff\" />\r\n                <Text style={styles.buttonText}>\r\n                  {isLogin ? 'Signing in...' : 'Creating account...'}\r\n                </Text>\r\n              </View>\r\n            ) : (\r\n              <Text style={styles.buttonText}>\r\n                {!isConnected \r\n                  ? 'Check Connection' \r\n                  : isLogin \r\n                    ? 'Sign In' \r\n                    : 'Create Account'\r\n                }\r\n              </Text>\r\n            )}\r\n          </TouchableOpacity>\r\n\r\n          {/* Alternative Login Methods */}\r\n          <View style={styles.alternativeLogin}>\r\n            <Text style={styles.alternativeText}>Or continue with</Text>\r\n            <View style={styles.socialButtons}>\r\n              <TouchableOpacity style={styles.socialButton} disabled>\r\n                <Text style={styles.socialButtonText}>Google</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.socialButton} disabled>\r\n                <Text style={styles.socialButtonText}>Apple</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <Text style={styles.comingSoon}>Coming Soon</Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1a1a1a',\r\n    justifyContent: 'center',\r\n  },\r\n  formContainer: {\r\n    padding: 20,\r\n    marginHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#888',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  input: {\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 5,\r\n    fontSize: 16,\r\n    borderWidth: 1,\r\n    borderColor: '#333',\r\n  },\r\n  inputError: {\r\n    borderColor: '#ff4444',\r\n    borderWidth: 1,\r\n  },\r\n  button: {\r\n    backgroundColor: '#007AFF',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    marginTop: 10,\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#555',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  loadingContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: 10,\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  statusContainer: {\r\n    padding: 10,\r\n    backgroundColor: '#f8f9fa',\r\n    borderRadius: 8,\r\n    marginBottom: 20,\r\n    alignItems: 'center',\r\n  },\r\n  statusText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  debugToggle: {\r\n    padding: 10,\r\n    backgroundColor: '#f0f0f0',\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n    alignItems: 'center',\r\n  },\r\n  debugToggleText: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  debugContainer: {\r\n    marginTop: 20,\r\n    padding: 15,\r\n    backgroundColor: '#f8f9fa',\r\n    borderRadius: 8,\r\n    maxHeight: 200,\r\n  },\r\n  debugTitle: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  clearLogsButton: {\r\n    padding: 5,\r\n    backgroundColor: '#dc3545',\r\n    borderRadius: 4,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  clearLogsText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n  },\r\n  debugLogs: {\r\n    maxHeight: 120,\r\n  },\r\n  debugLogText: {\r\n    fontSize: 10,\r\n    fontFamily: 'monospace',\r\n    color: '#333',\r\n    marginBottom: 2,\r\n  },\r\n  modeToggle: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#333',\r\n    borderRadius: 10,\r\n    marginBottom: 30,\r\n    padding: 4,\r\n  },\r\n  modeButton: {\r\n    flex: 1,\r\n    paddingVertical: 12,\r\n    alignItems: 'center',\r\n    borderRadius: 6,\r\n  },\r\n  modeButtonActive: {\r\n    backgroundColor: '#007AFF',\r\n  },\r\n  modeButtonText: {\r\n    color: '#888',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  modeButtonTextActive: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  errorContainer: {\r\n    backgroundColor: '#ff444420',\r\n    borderColor: '#ff4444',\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 15,\r\n  },\r\n  successContainer: {\r\n    backgroundColor: '#4CAF5020',\r\n    borderColor: '#4CAF50',\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 15,\r\n  },\r\n  errorText: {\r\n    color: '#ff4444',\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n  },\r\n  successText: {\r\n    color: '#4CAF50',\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  fieldErrorText: {\r\n    color: '#ff4444',\r\n    fontSize: 12,\r\n    marginBottom: 10,\r\n    marginLeft: 5,\r\n  },\r\n  passwordRequirements: {\r\n    backgroundColor: '#333',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginBottom: 15,\r\n  },\r\n  requirementsTitle: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  requirementText: {\r\n    color: '#888',\r\n    fontSize: 12,\r\n    marginBottom: 4,\r\n  },\r\n  requirementMet: {\r\n    color: '#4CAF50',\r\n  },\r\n  buttonWarning: {\r\n    backgroundColor: '#ff6b6b',\r\n    opacity: 0.7,\r\n  },\r\n  alternativeLogin: {\r\n    marginTop: 30,\r\n    alignItems: 'center',\r\n  },\r\n  alternativeText: {\r\n    color: '#888',\r\n    fontSize: 14,\r\n    marginBottom: 15,\r\n  },\r\n  socialButtons: {\r\n    flexDirection: 'row',\r\n    gap: 15,\r\n    marginBottom: 10,\r\n  },\r\n  socialButton: {\r\n    backgroundColor: '#333',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    opacity: 0.6,\r\n  },\r\n  socialButtonText: {\r\n    color: '#888',\r\n    fontSize: 14,\r\n  },\r\n  comingSoon: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n    fontStyle: 'italic',\r\n  },\r\n});","// Enhanced ChordData interface with more detailed types\r\nexport interface ChordData {\r\n  time: number;          // Time in seconds\r\n  chord: string;         // Chord name (e.g., \"Cmaj7\", \"D#m\")\r\n  confidence: number;    // Confidence score between 0-1\r\n  duration?: number;     // Optional: Duration the chord lasts\r\n  beat?: number;         // Optional: Beat position in measure\r\n}\r\n\r\n// Type for API response\r\ninterface ApiResponse {\r\n  status: 'success' | 'error';\r\n  chords?: any[];\r\n  error?: string;\r\n  analysisId?: string;\r\n  timestamp?: string;\r\n}\r\n\r\n// Configuration\r\nconst API_CONFIG = {\r\n  baseUrl: process.env.EXPO_PUBLIC_API_URL || process.env.API_URL || 'http://192.168.1.138:5000',\r\n  timeout: 10000, // 10 seconds\r\n  retries: 2,\r\n};\r\n\r\n// Utility function to safely convert unknown error types\r\nfunction toError(error: unknown): Error {\r\n  if (error instanceof Error) return error;\r\n  if (typeof error === 'string') return new Error(error);\r\n  return new Error(String(error));\r\n}\r\n\r\n/**\r\n * Enhanced chord analysis service with:\r\n * - Better error handling\r\n * - Request timeout\r\n * - Retry mechanism\r\n * - Type safety\r\n */\r\nexport const analyzeChords = async (youtubeUrl: string): Promise<ChordData[]> => {\r\n  const controller = new AbortController();\r\n  const timeoutId = setTimeout(() => controller.abort(), API_CONFIG.timeout);\r\n\r\n  try {\r\n    let lastError: Error | null = null;\r\n    \r\n    for (let attempt = 0; attempt <= API_CONFIG.retries; attempt++) {\r\n      try {\r\n        const response = await fetch(`${API_CONFIG.baseUrl}/analyze`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n          },\r\n          body: JSON.stringify({ \r\n            youtube_url: youtubeUrl,\r\n            options: {\r\n              detailed: true,  // Request additional data if supported\r\n            }\r\n          }),\r\n          signal: controller.signal,\r\n        });\r\n\r\n        clearTimeout(timeoutId);\r\n\r\n        if (!response.ok) {\r\n          const errorData = await tryParseError(response);\r\n          throw new Error(\r\n            errorData?.error || \r\n            `HTTP error! status: ${response.status}`\r\n          );\r\n        }\r\n\r\n        const data: ApiResponse = await response.json();\r\n        \r\n        if (data.status !== 'success' || !data.chords) {\r\n          throw new Error(data.error || 'Invalid response format');\r\n        }\r\n\r\n        // Transform and validate the response\r\n        return data.chords.map((chord, index) => {\r\n          if (!chord.time || !chord.chord || chord.confidence === undefined) {\r\n            throw new Error(`Invalid chord data at index ${index}`);\r\n          }\r\n          \r\n          return {\r\n            time: Number(chord.time),\r\n            chord: String(chord.chord),\r\n            confidence: Math.min(1, Math.max(0, Number(chord.confidence))),\r\n            duration: chord.duration ? Number(chord.duration) : undefined,\r\n            beat: chord.beat ? Number(chord.beat) : undefined,\r\n          };\r\n        });\r\n\r\n      } catch (error) {\r\n        lastError = toError(error);\r\n        \r\n        // Don't retry on abort or validation errors\r\n        // Check for DOMException only on web platform\r\n        const isDOMError = typeof DOMException !== 'undefined' && error instanceof DOMException;\r\n        if (isDOMError || lastError.message.includes('Invalid')) {\r\n          break;\r\n        }\r\n        \r\n        // Wait before retrying (exponential backoff)\r\n        if (attempt < API_CONFIG.retries) {\r\n          await new Promise(resolve => \r\n            setTimeout(resolve, 1000 * (attempt + 1))\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    throw lastError || new Error('Chord analysis failed');\r\n\r\n  } catch (error) {\r\n    const normalizedError = toError(error);\r\n    console.error('Chord analysis failed:', {\r\n      error: normalizedError.message,\r\n      stack: normalizedError.stack,\r\n      youtubeUrl,\r\n      timestamp: new Date().toISOString(),\r\n    });\r\n\r\n    // Provide fallback data for demo purposes\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.warn('Using demo chord data');\r\n      return generateDemoChords();\r\n    }\r\n\r\n    throw enhanceError(normalizedError);\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n};\r\n\r\n// Helper to parse error responses\r\nasync function tryParseError(response: Response): Promise<{ error?: string }> {\r\n  try {\r\n    return await response.json();\r\n  } catch {\r\n    return {};\r\n  }\r\n}\r\n\r\n// Enhance error with additional context\r\nfunction enhanceError(error: Error): Error {\r\n  if (error.message.includes('Failed to fetch')) {\r\n    return new Error('Connection failed. Please check your network.');\r\n  }\r\n  if (error.message.includes('aborted')) {\r\n    return new Error('Request timed out. Please try again.');\r\n  }\r\n  return error;\r\n}\r\n\r\n// Demo data for development\r\nfunction generateDemoChords(): ChordData[] {\r\n  const chords = ['C', 'G', 'Am', 'F', 'Dm', 'Em', 'Bdim'];\r\n  return Array.from({ length: 8 }, (_, i) => ({\r\n    time: i * 2,\r\n    chord: chords[i % chords.length],\r\n    confidence: 0.8 + Math.random() * 0.2,\r\n    duration: 2,\r\n    beat: (i % 4) + 1,\r\n  }));\r\n}\r\n\r\n/**\r\n * Chord processing utilities\r\n */\r\n\r\n// Group chords by time window\r\nexport function groupChords(chords: ChordData[], windowSize = 0.5): ChordData[] {\r\n  if (!chords.length) return [];\r\n\r\n  const sortedChords = [...chords].sort((a, b) => a.time - b.time);\r\n  const grouped: ChordData[] = [];\r\n  let currentWindow: ChordData[] = [];\r\n  let windowStart = sortedChords[0].time;\r\n\r\n  sortedChords.forEach(chord => {\r\n    if (chord.time >= windowStart + windowSize) {\r\n      if (currentWindow.length > 0) {\r\n        grouped.push(createWindowChord(currentWindow));\r\n      }\r\n      currentWindow = [];\r\n      windowStart = chord.time;\r\n    }\r\n    currentWindow.push(chord);\r\n  });\r\n\r\n  // Add remaining chords in the last window\r\n  if (currentWindow.length > 0) {\r\n    grouped.push(createWindowChord(currentWindow));\r\n  }\r\n\r\n  return grouped;\r\n}\r\n\r\nfunction createWindowChord(chords: ChordData[]): ChordData {\r\n  const averageTime = chords.reduce((sum, c) => sum + c.time, 0) / chords.length;\r\n  const mostConfidentChord = chords.reduce((prev, current) => \r\n    (prev.confidence > current.confidence) ? prev : current\r\n  );\r\n  \r\n  return {\r\n    ...mostConfidentChord,\r\n    time: averageTime\r\n  };\r\n}\r\n\r\n// Filter chords by confidence threshold\r\nexport function filterByConfidence(\r\n  chords: ChordData[], \r\n  minConfidence = 0.7\r\n): ChordData[] {\r\n  return chords.filter(c => c.confidence >= minConfidence);\r\n}\r\n\r\n// Find the current chord at a specific playback time\r\nexport function getCurrentChord(\r\n  chords: ChordData[], \r\n  currentTime: number\r\n): ChordData | undefined {\r\n  return chords.find((chord, i) => \r\n    currentTime >= chord.time && \r\n    (i === chords.length - 1 || currentTime < chords[i + 1].time)\r\n  );\r\n}","// src/context/ThemeContext.tsx\r\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\ntype Theme = {\r\n  primary: string;\r\n  secondary: string;\r\n  background: string;\r\n  surface: string;\r\n  surfaceHighlight: string;\r\n  error: string;\r\n  text: string;\r\n  secondaryText: string;\r\n  onPrimary: string;\r\n  divider: string;\r\n  children?: ReactNode;\r\n};\r\n\r\nconst lightTheme: Theme = {\r\n  primary: '#6A0DAD',\r\n  secondary: '#9C27B0',\r\n  background: '#FFFFFF',\r\n  surface: '#F5F5F5',\r\n  surfaceHighlight: '#E0E0E0',\r\n  error: '#B00020',\r\n  text: '#000000',\r\n  secondaryText: '#666666',\r\n  onPrimary: '#FFFFFF',\r\n  divider: '#DDDDDD',\r\n};\r\n\r\nconst darkTheme: Theme = {\r\n  primary: '#BB86FC',\r\n  secondary: '#03DAC6',\r\n  background: '#121212',\r\n  surface: '#1E1E1E',\r\n  surfaceHighlight: '#2D2D2D',\r\n  error: '#CF6679',\r\n  text: '#FFFFFF',\r\n  secondaryText: '#BBBBBB',\r\n  onPrimary: '#000000',\r\n  divider: '#333333',\r\n};\r\n\r\nconst ThemeContext = createContext<{\r\n  theme: Theme;\r\n  isDark: boolean;\r\n  setTheme: (dark: boolean) => void;\r\n}>({\r\n  theme: lightTheme,\r\n  isDark: false,\r\n  setTheme: () => {},\r\n});\r\n\r\nexport const ThemeProvider = ({ children }: ThemeProviderProps ) => {\r\n  const [isDark, setIsDark] = useState(false);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme: isDark ? darkTheme : lightTheme,\r\n        isDark,\r\n        setTheme: setIsDark,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext);","import { ChordFingering } from '../components/Fretboard';\r\n\r\nexport interface ChordDefinition {\r\n  name: string;\r\n  fingerings: ChordFingering[];\r\n}\r\n\r\nexport const CHORD_LIBRARY: Record<string, ChordDefinition> = {\r\n  'C': {\r\n    name: 'C Major',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [0, 3, 2, 0, 1, 0],\r\n        fingers: [0, 3, 2, 0, 1, 0],\r\n        type: 'open',\r\n      },\r\n      {\r\n        name: 'Barre 3rd Fret',\r\n        frets: [3, 3, 5, 5, 5, 3],\r\n        fingers: [1, 1, 3, 4, 4, 1],\r\n        barres: [{ fret: 3, startString: 0, endString: 5 }],\r\n        baseFret: 3,\r\n        type: 'barre',\r\n      }\r\n    ]\r\n  },\r\n  'G': {\r\n    name: 'G Major',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [3, 2, 0, 0, 3, 3],\r\n        fingers: [3, 2, 0, 0, 4, 4],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  },\r\n  'Am': {\r\n    name: 'A Minor',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [0, 0, 2, 2, 1, 0],\r\n        fingers: [0, 0, 3, 2, 1, 0],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  },\r\n  'F': {\r\n    name: 'F Major',\r\n    fingerings: [\r\n      {\r\n        name: 'Barre 1st Fret',\r\n        frets: [1, 3, 3, 2, 1, 1],\r\n        fingers: [1, 3, 4, 2, 1, 1],\r\n        barres: [{ fret: 1, startString: 0, endString: 5 }],\r\n        baseFret: 1,\r\n        type: 'barre',\r\n      }\r\n    ]\r\n  },\r\n  'Em': {\r\n    name: 'E Minor',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [0, 2, 2, 0, 0, 0],\r\n        fingers: [0, 2, 3, 0, 0, 0],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  },\r\n  'Em7': {\r\n    name: 'E Minor 7',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [0, 2, 0, 0, 0, 0],\r\n        fingers: [0, 2, 0, 0, 0, 0],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  },\r\n  'D': {\r\n    name: 'D Major',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [-1, -1, 0, 2, 3, 2],\r\n        fingers: [0, 0, 0, 1, 3, 2],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  },\r\n  'Dm': {\r\n    name: 'D Minor',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [-1, -1, 0, 2, 3, 1],\r\n        fingers: [0, 0, 0, 2, 3, 1],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  },\r\n  'B7': {\r\n    name: 'B Dominant 7',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [-1, 2, 1, 2, 0, 2],\r\n        fingers: [0, 2, 1, 3, 0, 4],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  },\r\n  'E': {\r\n    name: 'E Major',\r\n    fingerings: [\r\n      {\r\n        name: 'Open Position',\r\n        frets: [0, 2, 2, 1, 0, 0],\r\n        fingers: [0, 2, 3, 1, 0, 0],\r\n        type: 'open',\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nexport const getChordFingerings = (chordName: string): ChordDefinition | null => {\r\n  // First try the exact chord name\r\n  if (CHORD_LIBRARY[chordName]) {\r\n    return CHORD_LIBRARY[chordName];\r\n  }\r\n  \r\n  // Then try the base chord (remove extensions)\r\n  const baseChord = chordName.replace(/7|maj7|m7|add9|sus2|sus4|dim|aug|9|11|13/g, '');\r\n  if (CHORD_LIBRARY[baseChord]) {\r\n    return CHORD_LIBRARY[baseChord];\r\n  }\r\n  \r\n  // Handle specific mappings for common extensions\r\n  if (chordName.includes('m7') && !chordName.includes('maj7')) {\r\n    const minorChord = chordName.replace('m7', 'm');\r\n    if (CHORD_LIBRARY[minorChord]) {\r\n      return CHORD_LIBRARY[minorChord];\r\n    }\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\nexport const getAvailableChords = (): string[] => {\r\n  return Object.keys(CHORD_LIBRARY);\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\ninterface ChordTiming {\r\n  chord: string;\r\n  startTime: number;\r\n  duration: number;\r\n}\r\n\r\ninterface CompactRhythmTimelineProps {\r\n  chordProgression: ChordTiming[];\r\n  currentTime: number;\r\n  isPlaying: boolean;\r\n  theme: any;\r\n  onSeekToTime: (time: number) => void;\r\n}\r\n\r\nconst CompactRhythmTimeline: React.FC<CompactRhythmTimelineProps> = ({\r\n  chordProgression,\r\n  currentTime,\r\n  isPlaying,\r\n  theme,\r\n  onSeekToTime,\r\n}) => {\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n\r\n  // Auto-scroll to current position\r\n  useEffect(() => {\r\n    console.log('🎹 CompactRhythmTimeline: currentTime updated to', currentTime.toFixed(1), 'isPlaying:', isPlaying);\r\n    \r\n    if (scrollViewRef.current && isPlaying) {\r\n      // Find current chord index\r\n      const currentIndex = chordProgression.findIndex((chord, index) => {\r\n        const nextChord = chordProgression[index + 1];\r\n        return currentTime >= chord.startTime && \r\n               (!nextChord || currentTime < nextChord.startTime);\r\n      });\r\n\r\n      if (currentIndex >= 0) {\r\n        const currentChord = chordProgression[currentIndex];\r\n        console.log('🎹 Current chord in timeline:', currentChord.chord, 'at index:', currentIndex);\r\n        \r\n        // Scroll to show current chord in center\r\n        const itemWidth = 80; // Width of each chord item\r\n        const scrollPosition = Math.max(0, (currentIndex * itemWidth) - 150); // Center with offset\r\n        \r\n        scrollViewRef.current.scrollTo({ \r\n          x: scrollPosition, \r\n          animated: true \r\n        });\r\n      }\r\n    }\r\n  }, [currentTime, isPlaying, chordProgression]);\r\n\r\n  const getCurrentChordIndex = () => {\r\n    return chordProgression.findIndex((chord, index) => {\r\n      const nextChord = chordProgression[index + 1];\r\n      return currentTime >= chord.startTime && \r\n             (!nextChord || currentTime < nextChord.startTime);\r\n    });\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const currentChordIndex = getCurrentChordIndex();\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: theme.surface }]}>\r\n      <View style={styles.header}>\r\n        <Text style={[styles.title, { color: theme.text }]}>\r\n          Rhythm Timeline\r\n        </Text>\r\n        <Text style={[styles.timeIndicator, { color: theme.primary }]}>\r\n          {formatTime(currentTime)}\r\n        </Text>\r\n      </View>\r\n      \r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        style={styles.timeline}\r\n        contentContainerStyle={styles.timelineContent}\r\n      >\r\n        {chordProgression.map((chord, index) => {\r\n          const isActive = index === currentChordIndex;\r\n          const isPast = currentTime > chord.startTime + chord.duration;\r\n          const isNext = index === currentChordIndex + 1;\r\n          const isUpcoming = index > currentChordIndex && index <= currentChordIndex + 3;\r\n          \r\n          // Calculate progress within current chord\r\n          const progress = isActive ? \r\n            Math.min(1, Math.max(0, (currentTime - chord.startTime) / chord.duration)) : \r\n            isPast ? 1 : 0;\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={[\r\n                styles.chordItem,\r\n                {\r\n                  backgroundColor: isActive \r\n                    ? theme.primary + '30'\r\n                    : isNext \r\n                      ? theme.secondary + '20'\r\n                      : isUpcoming \r\n                        ? theme.surface + '80'\r\n                        : isPast \r\n                          ? theme.divider + '20'\r\n                          : theme.surface,\r\n                  borderColor: isActive \r\n                    ? theme.primary \r\n                    : isNext \r\n                      ? theme.secondary \r\n                      : 'transparent',\r\n                  borderWidth: isActive || isNext ? 2 : 1,\r\n                }\r\n              ]}\r\n              onPress={() => onSeekToTime(chord.startTime)}\r\n            >\r\n              {/* Progress bar for current chord */}\r\n              {isActive && (\r\n                <View style={[styles.progressBar, { backgroundColor: theme.divider }]}>\r\n                  <View \r\n                    style={[\r\n                      styles.progressFill,\r\n                      { \r\n                        backgroundColor: theme.primary,\r\n                        width: `${progress * 100}%`\r\n                      }\r\n                    ]}\r\n                  />\r\n                </View>\r\n              )}\r\n              \r\n              {/* Chord name */}\r\n              <Text style={[\r\n                styles.chordName,\r\n                {\r\n                  color: isActive \r\n                    ? theme.primary \r\n                    : isNext \r\n                      ? theme.secondary\r\n                      : isPast \r\n                        ? theme.secondaryText + '80'\r\n                        : theme.text,\r\n                  fontWeight: isActive ? 'bold' : isNext ? '600' : 'normal',\r\n                  fontSize: isActive ? 16 : 14\r\n                }\r\n              ]}>\r\n                {chord.chord}\r\n              </Text>\r\n              \r\n              {/* Time indicator */}\r\n              <Text style={[\r\n                styles.timeText,\r\n                { \r\n                  color: isActive ? theme.primary : theme.secondaryText,\r\n                  fontSize: isActive ? 11 : 10\r\n                }\r\n              ]}>\r\n                {formatTime(chord.startTime)}\r\n              </Text>\r\n              \r\n              {/* Duration indicator */}\r\n              <Text style={[\r\n                styles.durationText,\r\n                { color: theme.secondaryText }\r\n              ]}>\r\n                {chord.duration}s\r\n              </Text>\r\n              \r\n              {/* Status indicators */}\r\n              {isActive && isPlaying && (\r\n                <View style={[styles.playingIndicator, { backgroundColor: theme.primary }]}>\r\n                  <Text style={styles.playingIcon}>♪</Text>\r\n                </View>\r\n              )}\r\n              \r\n              {isNext && (\r\n                <Text style={[styles.nextLabel, { color: theme.secondary }]}>\r\n                  NEXT\r\n                </Text>\r\n              )}\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n      \r\n      {/* Timeline controls */}\r\n      <View style={styles.controls}>\r\n        <Text style={[styles.positionText, { color: theme.secondaryText }]}>\r\n          Chord {currentChordIndex + 1} of {chordProgression.length}\r\n        </Text>\r\n        <View style={[styles.globalProgress, { backgroundColor: theme.divider }]}>\r\n          <View \r\n            style={[\r\n              styles.globalProgressFill,\r\n              { \r\n                backgroundColor: theme.primary,\r\n                width: `${((currentChordIndex + 1) / chordProgression.length) * 100}%`\r\n              }\r\n            ]}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 12,\r\n    margin: 16,\r\n    overflow: 'hidden',\r\n    elevation: 2,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: 'rgba(255, 255, 255, 0.1)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  timeIndicator: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    fontFamily: 'monospace',\r\n  },\r\n  timeline: {\r\n    maxHeight: 120,\r\n  },\r\n  timelineContent: {\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 12,\r\n  },\r\n  chordItem: {\r\n    width: 75,\r\n    height: 90,\r\n    marginRight: 8,\r\n    borderRadius: 8,\r\n    padding: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'relative',\r\n  },\r\n  progressBar: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: 3,\r\n    borderRadius: 1.5,\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    borderRadius: 1.5,\r\n  },\r\n  chordName: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n    textAlign: 'center',\r\n  },\r\n  timeText: {\r\n    fontFamily: 'monospace',\r\n    marginBottom: 2,\r\n  },\r\n  durationText: {\r\n    fontSize: 9,\r\n    fontFamily: 'monospace',\r\n  },\r\n  playingIndicator: {\r\n    position: 'absolute',\r\n    top: 4,\r\n    right: 4,\r\n    width: 16,\r\n    height: 16,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  playingIcon: {\r\n    color: '#fff',\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  nextLabel: {\r\n    position: 'absolute',\r\n    bottom: 2,\r\n    fontSize: 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  controls: {\r\n    padding: 12,\r\n    borderTopWidth: 1,\r\n    borderTopColor: 'rgba(255, 255, 255, 0.1)',\r\n  },\r\n  positionText: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  globalProgress: {\r\n    height: 4,\r\n    borderRadius: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  globalProgressFill: {\r\n    height: '100%',\r\n    borderRadius: 2,\r\n  },\r\n});\r\n\r\nexport default CompactRhythmTimeline;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\ninterface ChordTiming {\r\n  chord: string;\r\n  startTime: number;\r\n  duration: number;\r\n}\r\n\r\ninterface Beat {\r\n  chord: string;\r\n  isChordChange: boolean;\r\n  time: number;\r\n  beatNumber: number;\r\n  measure: number;\r\n}\r\n\r\ninterface EmbeddedRhythmSheetProps {\r\n  chordProgression: ChordTiming[];\r\n  currentTime: number;\r\n  isPlaying: boolean;\r\n  theme: any;\r\n  onSeekToTime: (time: number) => void;\r\n}\r\n\r\nconst EmbeddedRhythmSheet: React.FC<EmbeddedRhythmSheetProps> = ({\r\n  chordProgression,\r\n  currentTime,\r\n  isPlaying,\r\n  theme,\r\n  onSeekToTime,\r\n}) => {\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n\r\n  // Convert chord progression to rhythm sheet with measures and beats\r\n  const generateRhythmSheet = (): Beat[] => {\r\n    const beats: Beat[] = [];\r\n    const beatsPerMeasure = 4;\r\n    const beatDuration = 1; // 1 second per beat (60 BPM)\r\n    \r\n    if (chordProgression.length === 0) return beats;\r\n    \r\n    const totalDuration = Math.max(\r\n      ...chordProgression.map(c => c.startTime + c.duration)\r\n    );\r\n    \r\n    const totalBeats = Math.ceil(totalDuration / beatDuration);\r\n    \r\n    for (let beatIndex = 0; beatIndex < totalBeats; beatIndex++) {\r\n      const beatTime = beatIndex * beatDuration;\r\n      const measure = Math.floor(beatIndex / beatsPerMeasure) + 1;\r\n      const beatNumber = (beatIndex % beatsPerMeasure) + 1;\r\n      \r\n      // Find the chord that should be playing at this beat\r\n      const activeChord = chordProgression.find(c => \r\n        beatTime >= c.startTime && beatTime < c.startTime + c.duration\r\n      );\r\n      \r\n      // Check if this is a chord change (first beat of a new chord)\r\n      const isChordChange = chordProgression.some(c => \r\n        Math.abs(c.startTime - beatTime) < 0.5\r\n      );\r\n      \r\n      beats.push({\r\n        chord: activeChord?.chord || '',\r\n        isChordChange,\r\n        time: beatTime,\r\n        beatNumber,\r\n        measure,\r\n      });\r\n    }\r\n    \r\n    return beats;\r\n  };\r\n\r\n  const rhythmSheet = generateRhythmSheet();\r\n  \r\n  // Auto-scroll to current position\r\n  useEffect(() => {\r\n    console.log('🎼 EmbeddedRhythmSheet: currentTime updated to', currentTime.toFixed(1), 'isPlaying:', isPlaying);\r\n    \r\n    if (scrollViewRef.current && isPlaying && rhythmSheet.length > 0) {\r\n      // Find current beat index\r\n      const currentBeatIndex = rhythmSheet.findIndex(beat => \r\n        Math.abs(beat.time - currentTime) < 0.5\r\n      );\r\n\r\n      if (currentBeatIndex >= 0) {\r\n        const currentBeat = rhythmSheet[currentBeatIndex];\r\n        console.log('🎼 Current beat:', currentBeat.beatNumber, 'measure:', currentBeat.measure, 'chord:', currentBeat.chord);\r\n        \r\n        // Calculate scroll position (each measure is about 200px wide)\r\n        const currentMeasure = rhythmSheet[currentBeatIndex].measure;\r\n        const scrollPosition = Math.max(0, (currentMeasure - 3) * 200); // Show 3 measures ahead to account for padding\r\n        \r\n        scrollViewRef.current.scrollTo({ \r\n          x: scrollPosition, \r\n          animated: true \r\n        });\r\n      }\r\n    }\r\n  }, [currentTime, isPlaying, rhythmSheet]);\r\n\r\n  const getCurrentBeat = () => {\r\n    return rhythmSheet.find(beat => \r\n      Math.abs(beat.time - currentTime) < 0.5\r\n    );\r\n  };\r\n\r\n  const isActiveBeat = (beat: Beat) => {\r\n    return Math.abs(beat.time - currentTime) < 0.5;\r\n  };\r\n\r\n  const isUpcomingBeat = (beat: Beat) => {\r\n    return beat.time > currentTime && beat.time <= currentTime + 4; // Next 4 beats\r\n  };\r\n\r\n  const isPastBeat = (beat: Beat) => {\r\n    return beat.time < currentTime - 0.5;\r\n  };\r\n\r\n  // Group beats by measures for rendering\r\n  const getMeasures = () => {\r\n    const measures: { [key: number]: Beat[] } = {};\r\n    rhythmSheet.forEach(beat => {\r\n      if (!measures[beat.measure]) {\r\n        measures[beat.measure] = [];\r\n      }\r\n      measures[beat.measure].push(beat);\r\n    });\r\n    return measures;\r\n  };\r\n\r\n  const measures = getMeasures();\r\n  const measureNumbers = Object.keys(measures).map(Number).sort((a, b) => a - b);\r\n\r\n  const renderMeasure = (measureNumber: number, beats: Beat[]) => {\r\n    return (\r\n      <View key={measureNumber} style={[styles.measure, { borderColor: theme.divider }]}>\r\n        <Text style={[styles.measureNumber, { color: theme.secondaryText }]}>\r\n          {measureNumber}\r\n        </Text>\r\n        <View style={styles.beatsRow}>\r\n          {beats.map((beat, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={[\r\n                styles.beat,\r\n                {\r\n                  backgroundColor: isActiveBeat(beat) && isPlaying\r\n                    ? theme.primary + '40'\r\n                    : isUpcomingBeat(beat)\r\n                      ? theme.secondary + '20'\r\n                      : isPastBeat(beat)\r\n                        ? theme.divider + '20'\r\n                        : 'transparent'\r\n                }\r\n              ]}\r\n              onPress={() => onSeekToTime(beat.time)}\r\n            >\r\n              {/* Chord symbol */}\r\n              {beat.isChordChange && beat.chord && (\r\n                <Text style={[\r\n                  styles.chordSymbol,\r\n                  {\r\n                    color: isActiveBeat(beat) \r\n                      ? theme.primary \r\n                      : isUpcomingBeat(beat)\r\n                        ? theme.secondary\r\n                        : theme.text,\r\n                    fontWeight: isActiveBeat(beat) ? 'bold' : 'normal'\r\n                  }\r\n                ]}>\r\n                  {beat.chord}\r\n                </Text>\r\n              )}\r\n              \r\n              {/* Beat indicator */}\r\n              <View style={[\r\n                styles.beatIndicator,\r\n                {\r\n                  backgroundColor: isActiveBeat(beat) && isPlaying\r\n                    ? theme.primary\r\n                    : beat.beatNumber === 1\r\n                      ? theme.text\r\n                      : theme.secondaryText,\r\n                  opacity: isActiveBeat(beat) && isPlaying ? 1 : 0.6,\r\n                  transform: isActiveBeat(beat) && isPlaying \r\n                    ? [{ scale: 1.2 }] \r\n                    : [{ scale: 1 }]\r\n                }\r\n              ]} />\r\n              \r\n              {/* Beat number */}\r\n              <Text style={[\r\n                styles.beatNumber,\r\n                {\r\n                  color: isActiveBeat(beat) \r\n                    ? theme.primary \r\n                    : theme.secondaryText,\r\n                  fontWeight: beat.beatNumber === 1 ? 'bold' : 'normal'\r\n                }\r\n              ]}>\r\n                {beat.beatNumber}\r\n              </Text>\r\n\r\n              {/* Playing indicator */}\r\n              {isActiveBeat(beat) && isPlaying && (\r\n                <View style={[styles.playingPulse, { backgroundColor: theme.primary }]} />\r\n              )}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: theme.surface }]}>\r\n      <View style={styles.header}>\r\n        <Text style={[styles.title, { color: theme.text }]}>\r\n          Rhythm Sheet • ♩ = 60 BPM\r\n        </Text>\r\n        <Text style={[styles.currentInfo, { color: theme.primary }]}>\r\n          {(() => {\r\n            const currentBeat = getCurrentBeat();\r\n            return currentBeat \r\n              ? `M${currentBeat.measure} • Beat ${currentBeat.beatNumber}`\r\n              : 'Ready to play';\r\n          })()}\r\n        </Text>\r\n      </View>\r\n      \r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        style={styles.sheetScroll}\r\n        contentContainerStyle={styles.sheetContent}\r\n      >\r\n        {measureNumbers.map(measureNumber => \r\n          renderMeasure(measureNumber, measures[measureNumber])\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 12,\r\n    margin: 16,\r\n    marginTop: 8,\r\n    overflow: 'hidden',\r\n    elevation: 1,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: 'rgba(255, 255, 255, 0.1)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  currentInfo: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    fontFamily: 'monospace',\r\n  },\r\n  sheetScroll: {\r\n    maxHeight: 100,\r\n  },\r\n  sheetContent: {\r\n    paddingLeft: 32, // Extra padding on left to ensure measure 1 is visible\r\n    paddingRight: 16,\r\n    paddingVertical: 12,\r\n  },\r\n  measure: {\r\n    width: 180,\r\n    marginRight: 8,\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    padding: 8,\r\n  },\r\n  measureNumber: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 4,\r\n  },\r\n  beatsRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n  },\r\n  beat: {\r\n    width: 35,\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n  },\r\n  chordSymbol: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    marginBottom: 2,\r\n  },\r\n  beatIndicator: {\r\n    width: 6,\r\n    height: 6,\r\n    borderRadius: 3,\r\n    marginBottom: 2,\r\n  },\r\n  beatNumber: {\r\n    fontSize: 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  playingPulse: {\r\n    position: 'absolute',\r\n    top: 2,\r\n    right: 2,\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n});\r\n\r\nexport default EmbeddedRhythmSheet;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { Animated, Dimensions, StyleSheet, Text, View } from 'react-native';\r\n\r\n// Get screen dimensions for responsive sizing\r\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n\r\nexport interface ChordFingering {\r\n  frets: number[]; // Fret numbers for each string (0 = open, -1 = muted)\r\n  fingers?: number[]; // Finger numbers (1-4, 0 = open, -1 = muted)\r\n  barres?: { fret: number; startString: number; endString: number }[]; // Barre chords\r\n  baseFret?: number; // Starting fret for display\r\n  name: string;\r\n  type: 'open' | 'barre' | 'movable';\r\n}\r\n\r\ninterface FretboardProps {\r\n  chord: string;\r\n  fingering: ChordFingering;\r\n  onFingeringChange?: (fingering: ChordFingering) => void;\r\n  theme: any;\r\n  size?: 'small' | 'medium' | 'large';\r\n  isHighlighted?: boolean;\r\n  animationDelay?: number;\r\n}\r\n\r\n// Enhanced sizing system for better mobile experience\r\nconst getSizeDimensions = (size: 'small' | 'medium' | 'large') => {\r\n  const baseWidth = Math.min(screenWidth * 0.85, 320); // Responsive to screen width\r\n  \r\n  switch (size) {\r\n    case 'small':\r\n      return {\r\n        width: baseWidth * 0.6,\r\n        height: (baseWidth * 0.6) * 1.3,\r\n        stringSpacing: (baseWidth * 0.6) / 7,\r\n        fretSpacing: ((baseWidth * 0.6) * 1.3) / 6,\r\n        dotSize: 14,\r\n        fontSize: 10\r\n      };\r\n    case 'medium':\r\n      return {\r\n        width: baseWidth * 0.75,\r\n        height: (baseWidth * 0.75) * 1.3,\r\n        stringSpacing: (baseWidth * 0.75) / 7,\r\n        fretSpacing: ((baseWidth * 0.75) * 1.3) / 6,\r\n        dotSize: 18,\r\n        fontSize: 12\r\n      };\r\n    case 'large':\r\n      return {\r\n        width: baseWidth,\r\n        height: baseWidth * 1.3,\r\n        stringSpacing: baseWidth / 7,\r\n        fretSpacing: (baseWidth * 1.3) / 6,\r\n        dotSize: 22,\r\n        fontSize: 14\r\n      };\r\n  }\r\n};\r\n\r\nexport const Fretboard: React.FC<FretboardProps> = ({ \r\n  chord, \r\n  fingering, \r\n  onFingeringChange, \r\n  theme, \r\n  size = 'medium',\r\n  isHighlighted = false,\r\n  animationDelay = 0\r\n}) => {\r\n  const strings = ['E', 'A', 'D', 'G', 'B', 'E']; // From 6th to 1st string\r\n  const maxFrets = 4; // Standard chord diagrams show 4 frets\r\n  const baseFret = fingering.baseFret || 1;\r\n  const dimensions = getSizeDimensions(size);\r\n  \r\n  // Animation for highlighting\r\n  const highlightAnim = useRef(new Animated.Value(0)).current;\r\n  const pulseAnim = useRef(new Animated.Value(1)).current;\r\n\r\n  // Trigger highlight animation when isHighlighted changes\r\n  useEffect(() => {\r\n    if (isHighlighted) {\r\n      setTimeout(() => {\r\n        Animated.parallel([\r\n          Animated.timing(highlightAnim, {\r\n            toValue: 1,\r\n            duration: 300,\r\n            useNativeDriver: false,\r\n          }),\r\n          Animated.loop(\r\n            Animated.sequence([\r\n              Animated.timing(pulseAnim, {\r\n                toValue: 1.05,\r\n                duration: 600,\r\n                useNativeDriver: true,\r\n              }),\r\n              Animated.timing(pulseAnim, {\r\n                toValue: 1,\r\n                duration: 600,\r\n                useNativeDriver: true,\r\n              }),\r\n            ]),\r\n            { iterations: -1 }\r\n          ),\r\n        ]).start();\r\n      }, animationDelay);\r\n    } else {\r\n      pulseAnim.stopAnimation();\r\n      Animated.parallel([\r\n        Animated.timing(highlightAnim, {\r\n          toValue: 0,\r\n          duration: 200,\r\n          useNativeDriver: false,\r\n        }),\r\n        Animated.timing(pulseAnim, {\r\n          toValue: 1,\r\n          duration: 200,\r\n          useNativeDriver: true,\r\n        }),\r\n      ]).start();\r\n    }\r\n  }, [isHighlighted, animationDelay, highlightAnim, pulseAnim]);\r\n\r\n  return (\r\n    <Animated.View style={[\r\n      styles.container,\r\n      {\r\n        width: dimensions.width,\r\n        height: dimensions.height,\r\n        transform: [{ scale: pulseAnim }],\r\n      }\r\n    ]}>\r\n      <Animated.View style={[\r\n        styles.fretboardContainer, \r\n        { \r\n          width: dimensions.width, \r\n          height: dimensions.height,\r\n          backgroundColor: theme.surface + '20',\r\n          borderRadius: 12,\r\n          padding: 8,\r\n          elevation: isHighlighted ? 6 : 2,\r\n          shadowColor: theme.primary || '#007AFF',\r\n          shadowOffset: { width: 0, height: 2 },\r\n          shadowOpacity: isHighlighted ? 0.4 : 0.1,\r\n          shadowRadius: isHighlighted ? 8 : 4,\r\n          borderWidth: highlightAnim.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: [1, 3],\r\n            extrapolate: 'clamp',\r\n          }),\r\n          borderColor: highlightAnim.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: [theme.divider || '#E0E0E0', theme.primary || '#007AFF'],\r\n            extrapolate: 'clamp',\r\n          }),\r\n        }\r\n      ]}>\r\n        {/* Fretboard background with wood texture feel */}\r\n        <View style={[\r\n          styles.fretboardBackground,\r\n          {\r\n            width: dimensions.width - 16,\r\n            height: dimensions.height - 16,\r\n            backgroundColor: '#F5DEB3',\r\n            borderRadius: 8,\r\n            position: 'absolute',\r\n            top: 8,\r\n            left: 8,\r\n          }\r\n        ]} />\r\n        \r\n        {/* Chord name at top */}\r\n        <Text\r\n          style={[\r\n            styles.chordNameTop,\r\n            {\r\n              color: theme.text,\r\n              fontSize: dimensions.fontSize + 2,\r\n              fontWeight: 'bold',\r\n              textAlign: 'center',\r\n              marginBottom: 8,\r\n            }\r\n          ]}\r\n        >\r\n          {chord}\r\n        </Text>\r\n        \r\n        {/* Nut (thick line at the beginning for open chords) */}\r\n        <View\r\n          style={[\r\n            styles.nut,\r\n            {\r\n              backgroundColor: baseFret === 1 ? '#8B4513' : 'transparent',\r\n              height: (strings.length - 1) * dimensions.stringSpacing + 10,\r\n              width: baseFret === 1 ? 5 : 0,\r\n              left: 25,\r\n              top: 35,\r\n              borderRadius: 2,\r\n            }\r\n          ]}\r\n        />\r\n        \r\n        {/* Frets */}\r\n        {Array.from({ length: maxFrets + 1 }, (_, fretIndex) => (\r\n          <View\r\n            key={`fret-${fretIndex}`}\r\n            style={[\r\n              styles.fretLine,\r\n              {\r\n                height: (strings.length - 1) * dimensions.stringSpacing + 10,\r\n                width: fretIndex === 0 ? (baseFret === 1 ? 0 : 2.5) : 1.5,\r\n                backgroundColor: fretIndex === 0 && baseFret > 1 \r\n                  ? theme.text \r\n                  : '#C0C0C0',\r\n                left: 30 + (fretIndex * dimensions.fretSpacing),\r\n                top: 35,\r\n                borderRadius: 0.75,\r\n                elevation: 1,\r\n              }\r\n            ]}\r\n          />\r\n        ))}\r\n        \r\n        {/* Strings with realistic thickness */}\r\n        {strings.map((stringName, stringIndex) => {\r\n          const stringThickness = stringIndex < 2 ? 2.5 : stringIndex < 4 ? 1.8 : 1.2;\r\n          return (\r\n            <View\r\n              key={`string-${stringIndex}`}\r\n              style={[\r\n                styles.stringLine,\r\n                {\r\n                  width: maxFrets * dimensions.fretSpacing + 15,\r\n                  height: stringThickness,\r\n                  backgroundColor: '#666',\r\n                  left: 25,\r\n                  top: 35 + (stringIndex * dimensions.stringSpacing),\r\n                  borderRadius: stringThickness / 2,\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        })}\r\n        \r\n        {/* String labels */}\r\n        {strings.map((stringName, stringIndex) => (\r\n          <Text\r\n            key={`label-${stringIndex}`}\r\n            style={[\r\n              styles.stringLabel,\r\n              {\r\n                color: theme.text,\r\n                fontSize: dimensions.fontSize - 1,\r\n                fontWeight: '600',\r\n                left: 8,\r\n                top: 30 + (stringIndex * dimensions.stringSpacing),\r\n                textAlign: 'center',\r\n                width: 12,\r\n              }\r\n            ]}\r\n          >\r\n            {stringName}\r\n          </Text>\r\n        ))}\r\n        \r\n        {/* Fret number indicator */}\r\n        {baseFret > 1 && (\r\n          <Text\r\n            style={[\r\n              styles.baseFretNumber,\r\n              {\r\n                color: theme.text,\r\n                fontSize: dimensions.fontSize,\r\n                fontWeight: 'bold',\r\n                left: 35 + (dimensions.fretSpacing / 2),\r\n                top: 15,\r\n                textAlign: 'center',\r\n              }\r\n            ]}\r\n          >\r\n            {baseFret}fr\r\n          </Text>\r\n        )}\r\n        \r\n        {/* Open string indicators */}\r\n        {fingering.frets.map((fret, stringIndex) => {\r\n          if (fret !== 0) return null;\r\n          \r\n          return (\r\n            <View\r\n              key={`open-${stringIndex}`}\r\n              style={[\r\n                styles.openStringIndicator,\r\n                {\r\n                  width: dimensions.dotSize * 0.7,\r\n                  height: dimensions.dotSize * 0.7,\r\n                  borderRadius: (dimensions.dotSize * 0.7) / 2,\r\n                  borderWidth: 2,\r\n                  borderColor: theme.primary || '#007AFF',\r\n                  backgroundColor: 'transparent',\r\n                  left: 30 - (dimensions.dotSize * 0.35),\r\n                  top: 35 + (stringIndex * dimensions.stringSpacing) - (dimensions.dotSize * 0.35),\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        })}\r\n        \r\n        {/* Muted string indicators */}\r\n        {fingering.frets.map((fret, stringIndex) => {\r\n          if (fret !== -1) return null;\r\n          \r\n          return (\r\n            <Text\r\n              key={`muted-${stringIndex}`}\r\n              style={[\r\n                styles.mutedIndicator,\r\n                {\r\n                  fontSize: dimensions.fontSize + 1,\r\n                  color: '#FF3B30',\r\n                  fontWeight: 'bold',\r\n                  left: 30 - (dimensions.fontSize / 2),\r\n                  top: 27 + (stringIndex * dimensions.stringSpacing),\r\n                  textAlign: 'center',\r\n                  width: dimensions.fontSize,\r\n                }\r\n              ]}\r\n            >\r\n              ✕\r\n            </Text>\r\n          );\r\n        })}\r\n        \r\n        {/* Finger positions */}\r\n        {fingering.frets.map((fret, stringIndex) => {\r\n          if (fret <= 0) return null;\r\n          \r\n          const fretPosition = fret - baseFret + 1;\r\n          if (fretPosition < 1 || fretPosition > maxFrets) return null;\r\n          \r\n          const x = 30 + (fretPosition * dimensions.fretSpacing) - (dimensions.fretSpacing / 2);\r\n          const y = 35 + (stringIndex * dimensions.stringSpacing) - (dimensions.dotSize / 2);\r\n          const fingerNumber = fingering.fingers?.[stringIndex] || '';\r\n          \r\n          return (\r\n            <View\r\n              key={`finger-${stringIndex}`}\r\n              style={[\r\n                styles.fingerDot,\r\n                {\r\n                  width: dimensions.dotSize,\r\n                  height: dimensions.dotSize,\r\n                  borderRadius: dimensions.dotSize / 2,\r\n                  backgroundColor: theme.primary || '#007AFF',\r\n                  left: x,\r\n                  top: y,\r\n                  borderWidth: 2,\r\n                  borderColor: '#fff',\r\n                  elevation: 3,\r\n                  shadowColor: '#000',\r\n                  shadowOffset: { width: 0, height: 1 },\r\n                  shadowOpacity: 0.3,\r\n                  shadowRadius: 2,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }\r\n              ]}\r\n            >\r\n              {fingerNumber > 0 && (\r\n                <Text\r\n                  style={[\r\n                    styles.fingerNumber,\r\n                    {\r\n                      fontSize: dimensions.fontSize - 3,\r\n                      color: '#fff',\r\n                      fontWeight: 'bold',\r\n                      textAlign: 'center',\r\n                    }\r\n                  ]}\r\n                >\r\n                  {fingerNumber}\r\n                </Text>\r\n              )}\r\n            </View>\r\n          );\r\n        })}\r\n        \r\n        {/* Barre indicators */}\r\n        {fingering.barres?.map((barre, index) => {\r\n          const fretPosition = barre.fret - baseFret + 1;\r\n          if (fretPosition < 1 || fretPosition > maxFrets) return null;\r\n          \r\n          const startY = 35 + (barre.startString * dimensions.stringSpacing);\r\n          const endY = 35 + (barre.endString * dimensions.stringSpacing);\r\n          const x = 30 + (fretPosition * dimensions.fretSpacing) - (dimensions.fretSpacing / 2);\r\n          \r\n          return (\r\n            <View\r\n              key={`barre-${index}`}\r\n              style={[\r\n                styles.barreIndicator,\r\n                {\r\n                  width: dimensions.dotSize * 0.6,\r\n                  height: Math.abs(endY - startY) + dimensions.dotSize,\r\n                  backgroundColor: theme.primary || '#007AFF',\r\n                  left: x - (dimensions.dotSize * 0.3),\r\n                  top: Math.min(startY, endY) - (dimensions.dotSize / 2),\r\n                  borderRadius: dimensions.dotSize * 0.3,\r\n                  borderWidth: 1,\r\n                  borderColor: '#fff',\r\n                  elevation: 2,\r\n                }\r\n              ]}\r\n            />\r\n          );\r\n        })}\r\n        \r\n        {/* Fingering type indicator */}\r\n        <Text\r\n          style={[\r\n            styles.fingeringType,\r\n            {\r\n              color: theme.secondaryText || '#666',\r\n              fontSize: dimensions.fontSize - 2,\r\n              textAlign: 'center',\r\n              position: 'absolute',\r\n              bottom: 8,\r\n              width: dimensions.width - 16,\r\n              left: 8,\r\n              fontStyle: 'italic',\r\n            }\r\n          ]}\r\n        >\r\n          {fingering.type} • {fingering.name}\r\n        </Text>\r\n      </Animated.View>\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  fretboardContainer: {\r\n    position: 'relative',\r\n  },\r\n  fretboardBackground: {\r\n    // Background styling handled inline for responsiveness\r\n  },\r\n  chordNameTop: {\r\n    marginTop: 4,\r\n  },\r\n  nut: {\r\n    position: 'absolute',\r\n  },\r\n  fretLine: {\r\n    position: 'absolute',\r\n  },\r\n  stringLine: {\r\n    position: 'absolute',\r\n  },\r\n  stringLabel: {\r\n    position: 'absolute',\r\n  },\r\n  baseFretNumber: {\r\n    position: 'absolute',\r\n  },\r\n  openStringIndicator: {\r\n    position: 'absolute',\r\n  },\r\n  mutedIndicator: {\r\n    position: 'absolute',\r\n  },\r\n  fingerDot: {\r\n    position: 'absolute',\r\n  },\r\n  fingerNumber: {\r\n    // Finger number styling handled inline\r\n  },\r\n  barreIndicator: {\r\n    position: 'absolute',\r\n  },\r\n  fingeringType: {\r\n    // Fingering type styling handled inline\r\n  },\r\n});\r\n\r\nexport default Fretboard;\r\n","import React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { Platform, StyleSheet, Text, View } from 'react-native';\r\n\r\n// Import YouTube iframe component for native platforms only\r\nlet YoutubeIframe: any = null;\r\nif (Platform.OS !== 'web') {\r\n  try {\r\n    YoutubeIframe = require('react-native-youtube-iframe').default;\r\n    console.log('✅ YouTube iframe loaded for native platform');\r\n  } catch (e) {\r\n    console.log('❌ YouTube iframe not available for native:', e);\r\n  }\r\n}\r\n\r\ninterface UnifiedYouTubePlayerProps {\r\n  videoId: string;\r\n  height?: number;\r\n  width?: number | string;\r\n  playing?: boolean;\r\n  onChangeState?: (state: string) => void;\r\n  onError?: (error: string) => void;\r\n  onTimeUpdate?: (time: number) => void;\r\n  onPlayingChange?: (playing: boolean) => void;\r\n  autoplay?: boolean;\r\n  muted?: boolean;\r\n  loop?: boolean;\r\n  controls?: boolean;\r\n}\r\n\r\nexport interface YouTubePlayerRef {\r\n  play: () => void;\r\n  pause: () => void;\r\n  seekTo: (time: number) => void;\r\n  getCurrentTime: () => Promise<number>;\r\n}\r\n\r\n// YouTube Player Component with iframe-based implementation\r\nconst UnifiedYouTubePlayer = React.forwardRef<YouTubePlayerRef, UnifiedYouTubePlayerProps>(({\r\n  videoId,\r\n  height = 200,\r\n  width = '100%',\r\n  playing = false,\r\n  onChangeState,\r\n  onError,\r\n  onTimeUpdate,\r\n  onPlayingChange,\r\n  autoplay = false,\r\n  muted = false,\r\n  loop = false,\r\n  controls = true,\r\n}, ref) => {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [isPlayerPlaying, setIsPlayerPlaying] = useState(false);\r\n  const timeUpdateInterval = useRef<NodeJS.Timeout | null>(null);\r\n  const startPlayTime = useRef<number>(0);\r\n\r\n  // Real YouTube API time tracking with fallback to simple tracking\r\n  const startTimeTracking = useCallback(() => {\r\n    if (timeUpdateInterval.current) {\r\n      clearInterval(timeUpdateInterval.current);\r\n    }\r\n    \r\n    console.log('⏰ Starting YouTube time tracking from:', currentTime);\r\n    startPlayTime.current = Date.now() - (currentTime * 1000); // Account for current position\r\n    \r\n    timeUpdateInterval.current = setInterval(() => {\r\n      // Try to get actual YouTube player time first\r\n      if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n        try {\r\n          const iframe = document.querySelector(`iframe[src*=\"${videoId}\"]`) as HTMLIFrameElement;\r\n          if (iframe && iframe.contentWindow) {\r\n            // Request current time from YouTube player\r\n            iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"getCurrentTime\",\"args\":\"\"}', '*');\r\n          }\r\n        } catch (e) {\r\n          console.warn('Could not get YouTube time, using fallback:', e);\r\n        }\r\n      }\r\n      \r\n      // Fallback: use elapsed time tracking\r\n      const elapsed = (Date.now() - startPlayTime.current) / 1000;\r\n      setCurrentTime(elapsed);\r\n      onTimeUpdate?.(elapsed);\r\n    }, 250); // Update every 250ms for better accuracy\r\n  }, [currentTime, onTimeUpdate, videoId]);\r\n\r\n  const stopTimeTracking = useCallback(() => {\r\n    console.log('⏰ Stopping time tracking');\r\n    if (timeUpdateInterval.current) {\r\n      clearInterval(timeUpdateInterval.current);\r\n      timeUpdateInterval.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // Handle seeking to specific time\r\n  const seekToTime = useCallback((time: number) => {\r\n    console.log('🎯 Seeking to time:', time);\r\n    setCurrentTime(time);\r\n    onTimeUpdate?.(time);\r\n    \r\n    // If playing, restart time tracking from new position\r\n    if (isPlayerPlaying) {\r\n      startTimeTracking();\r\n    }\r\n  }, [onTimeUpdate, isPlayerPlaying, startTimeTracking]);\r\n\r\n  // Handle play/pause state changes\r\n  const handlePlayStateChange = useCallback((shouldPlay: boolean) => {\r\n    console.log('🎵 Play state change:', shouldPlay);\r\n    setIsPlayerPlaying(shouldPlay);\r\n    onPlayingChange?.(shouldPlay);\r\n    \r\n    if (shouldPlay) {\r\n      startTimeTracking();\r\n    } else {\r\n      stopTimeTracking();\r\n    }\r\n  }, [startTimeTracking, stopTimeTracking, onPlayingChange]);\r\n\r\n  // Listen for actual iframe events to detect YouTube player state changes\r\n  useEffect(() => {\r\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n      const handleMessage = (event: MessageEvent) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          if (data.event === 'video-state-change') {\r\n            console.log('🎬 YouTube iframe state change:', data.info);\r\n            const isPlaying = data.info === 1; // 1 = playing in YouTube API\r\n            if (isPlaying !== isPlayerPlaying) {\r\n              handlePlayStateChange(isPlaying);\r\n            }\r\n          } else if (data.event === 'video-time-update' || data.event === 'infoDelivery') {\r\n            // Handle both time updates and getCurrentTime responses\r\n            if (data.info && typeof data.info === 'number') {\r\n              console.log('🎬 YouTube iframe time update:', data.info);\r\n              setCurrentTime(data.info);\r\n              onTimeUpdate?.(data.info);\r\n            } else if (data.info && data.info.currentTime !== undefined) {\r\n              console.log('🎬 YouTube iframe getCurrentTime:', data.info.currentTime);\r\n              setCurrentTime(data.info.currentTime);\r\n              onTimeUpdate?.(data.info.currentTime);\r\n            }\r\n          }\r\n        } catch (e) {\r\n          // Ignore non-JSON messages\r\n        }\r\n      };\r\n\r\n      window.addEventListener('message', handleMessage);\r\n      return () => window.removeEventListener('message', handleMessage);\r\n    }\r\n  }, [isPlayerPlaying, handlePlayStateChange, onTimeUpdate]);\r\n\r\n  // React to playing prop changes\r\n  useEffect(() => {\r\n    if (playing !== isPlayerPlaying) {\r\n      handlePlayStateChange(playing);\r\n    }\r\n  }, [playing, isPlayerPlaying, handlePlayStateChange]);\r\n\r\n  // Expose player methods through ref\r\n  useImperativeHandle(ref, () => ({\r\n    play: () => {\r\n      console.log('🎵 YouTube player play() called');\r\n      setIsPlayerPlaying(true);\r\n      onPlayingChange?.(true);\r\n      startTimeTracking();\r\n      \r\n      // Also try to control iframe if on web\r\n      if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n        try {\r\n          const iframe = document.querySelector(`iframe[src*=\"${videoId}\"]`) as HTMLIFrameElement;\r\n          if (iframe && iframe.contentWindow) {\r\n            iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*');\r\n          }\r\n        } catch (e) {\r\n          console.warn('Could not control iframe directly:', e);\r\n        }\r\n      }\r\n    },\r\n    pause: () => {\r\n      console.log('⏸️ YouTube player pause() called');\r\n      setIsPlayerPlaying(false);\r\n      onPlayingChange?.(false);\r\n      stopTimeTracking();\r\n      \r\n      // Also try to control iframe if on web\r\n      if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n        try {\r\n          const iframe = document.querySelector(`iframe[src*=\"${videoId}\"]`) as HTMLIFrameElement;\r\n          if (iframe && iframe.contentWindow) {\r\n            iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\r\n          }\r\n        } catch (e) {\r\n          console.warn('Could not control iframe directly:', e);\r\n        }\r\n      }\r\n    },\r\n    seekTo: (time: number) => {\r\n      seekToTime(time);\r\n      \r\n      // Also try to control iframe if on web\r\n      if (Platform.OS === 'web' && typeof window !== 'undefined') {\r\n        try {\r\n          const iframe = document.querySelector(`iframe[src*=\"${videoId}\"]`) as HTMLIFrameElement;\r\n          if (iframe && iframe.contentWindow) {\r\n            iframe.contentWindow.postMessage(`{\"event\":\"command\",\"func\":\"seekTo\",\"args\":[${time}, true]}`, '*');\r\n          }\r\n        } catch (e) {\r\n          console.warn('Could not control iframe directly:', e);\r\n        }\r\n      }\r\n    },\r\n    getCurrentTime: async (): Promise<number> => {\r\n      return currentTime;\r\n    },\r\n  }), [currentTime, onPlayingChange, startTimeTracking, stopTimeTracking, seekToTime, videoId]);\r\n\r\n  const onStateChange = useCallback((state: string) => {\r\n    onChangeState?.(state);\r\n    \r\n    // Notify parent of playing state changes\r\n    const isPlaying = state === 'playing';\r\n    handlePlayStateChange(isPlaying);\r\n  }, [onChangeState, handlePlayStateChange]);\r\n\r\n  const onPlayerError = useCallback((error: string) => {\r\n    console.error('YouTube Player Error:', error);\r\n    onError?.(error);\r\n  }, [onError]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      stopTimeTracking();\r\n    };\r\n  }, [stopTimeTracking]);\r\n\r\n  // Universal iframe implementation - works on both web and native\r\n  const params = new URLSearchParams({\r\n    autoplay: autoplay ? '1' : '0',\r\n    mute: muted ? '1' : '0',\r\n    controls: controls ? '1' : '0',\r\n    loop: loop ? '1' : '0',\r\n    rel: '0', // Don't show related videos\r\n    modestbranding: '1', // Hide YouTube logo\r\n    playsinline: '1', // Play inline on iOS\r\n    enablejsapi: '1', // Enable JS API for control\r\n    origin: Platform.OS === 'web' ? window.location.origin : undefined,\r\n  }).toString();\r\n\r\n  // Validate video ID format (YouTube video IDs are typically 11 characters, but some can be longer)\r\n  // Accept both 11-character video IDs and longer IDs for various YouTube content types\r\n  const isValidVideoId = videoId && /^[a-zA-Z0-9_-]{11,}$/.test(videoId.trim());\r\n\r\n  console.log('Video ID validation result:', isValidVideoId, 'for videoId:', videoId);\r\n\r\n  if (!isValidVideoId) {\r\n    console.warn('Invalid YouTube video ID format:', videoId, 'Length:', videoId?.length);\r\n  }\r\n\r\n  console.log('UnifiedYouTubePlayer received videoId:', videoId);\r\n  console.log('Video ID length:', videoId?.length);\r\n  console.log('Video ID type:', typeof videoId);\r\n\r\n  return (\r\n    <View style={[styles.container, { height, width }]}>\r\n      {Platform.OS === 'web' ? (\r\n        // Web-specific iframe implementation\r\n        videoId ? (\r\n          <View style={{ position: 'relative' }}>\r\n            {React.createElement('iframe', {\r\n              title: `YouTube video ${videoId}`,\r\n              width: '100%',\r\n              height: height,\r\n              src: `https://www.youtube.com/embed/${videoId.trim()}?${params}&enablejsapi=1&origin=${Platform.OS === 'web' && typeof window !== 'undefined' ? window.location.origin : ''}`,\r\n              frameBorder: '0',\r\n              allow: 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture',\r\n              allowFullScreen: true,\r\n              style: { borderRadius: 12 },\r\n              onLoad: () => {\r\n                console.log('YouTube iframe loaded successfully for video:', videoId);\r\n                \r\n                // Auto-start if playing prop is true\r\n                if (playing) {\r\n                  setTimeout(() => {\r\n                    handlePlayStateChange(true);\r\n                  }, 1000); // Give iframe time to initialize\r\n                }\r\n              },\r\n              onError: (e: any) => {\r\n                console.error('YouTube iframe error for video:', videoId, e);\r\n                onError?.('Failed to load YouTube video');\r\n              }\r\n            })}\r\n            {/* Add a debug overlay to show video info */}\r\n            {!isValidVideoId && (\r\n              <View style={styles.debugOverlay}>\r\n                <Text style={styles.debugText}>Video ID: {videoId}</Text>\r\n                <Text style={styles.debugText}>Length: {videoId?.length}</Text>\r\n                <Text style={styles.debugText}>Valid: {String(isValidVideoId)}</Text>\r\n              </View>\r\n            )}\r\n          </View>\r\n        ) : (\r\n          <View style={styles.fallback}>\r\n            <Text style={styles.fallbackTitle}>⚠️ Missing Video ID</Text>\r\n            <Text style={styles.fallbackText}>No video ID provided</Text>\r\n            <Text style={styles.fallbackSubText}>\r\n              Unable to load video\r\n            </Text>\r\n            <Text style={styles.fallbackHint}>\r\n              Please check the video URL\r\n            </Text>\r\n          </View>\r\n        )\r\n      ) : (\r\n        // Native implementation using react-native-youtube-iframe\r\n        YoutubeIframe ? (\r\n          <YoutubeIframe\r\n            height={height}\r\n            play={playing}\r\n            videoId={videoId}\r\n            onChangeState={(state: string) => {\r\n              console.log('Native YouTube state change:', state);\r\n              onStateChange(state);\r\n              const isPlaying = state === 'playing';\r\n              handlePlayStateChange(isPlaying);\r\n            }}\r\n            onError={(error: string) => {\r\n              console.error('Native YouTube error:', error);\r\n              onPlayerError(error);\r\n            }}\r\n            allowWebViewZoom={false}\r\n            webViewStyle={{ borderRadius: 12 }}\r\n            initialPlayerParams={{\r\n              controls: controls,\r\n              modestbranding: true,\r\n              rel: false,\r\n            }}\r\n          />\r\n        ) : (\r\n          // Fallback for devices without YouTube iframe support\r\n          <View style={styles.fallback}>\r\n            <Text style={styles.fallbackTitle}>🎵 YouTube Player</Text>\r\n            <Text style={styles.fallbackText}>Video ID: {videoId}</Text>\r\n            <Text style={styles.fallbackSubText}>\r\n              Install react-native-youtube-iframe for native support\r\n            </Text>\r\n            <Text style={styles.fallbackHint}>\r\n              Try opening in the YouTube app\r\n            </Text>\r\n          </View>\r\n        )\r\n      )}\r\n    </View>\r\n  );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#000',\r\n    borderRadius: 12,\r\n    overflow: 'hidden',\r\n    elevation: 4,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n  },\r\n  webView: {\r\n    backgroundColor: '#000',\r\n    borderRadius: 12,\r\n  },\r\n  fallback: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n    borderWidth: 2,\r\n    borderColor: '#333',\r\n    borderStyle: 'dashed',\r\n  },\r\n  fallbackTitle: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  fallbackText: {\r\n    color: '#ccc',\r\n    fontSize: 14,\r\n    textAlign: 'center',\r\n    marginBottom: 4,\r\n    fontFamily: 'monospace',\r\n  },\r\n  fallbackSubText: {\r\n    color: '#888',\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  fallbackHint: {\r\n    color: '#666',\r\n    fontSize: 11,\r\n    textAlign: 'center',\r\n    fontStyle: 'italic',\r\n  },\r\n  debugOverlay: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: 'rgba(255, 0, 0, 0.8)',\r\n    padding: 4,\r\n    borderRadius: 4,\r\n    zIndex: 1000,\r\n  },\r\n  debugText: {\r\n    color: '#fff',\r\n    fontSize: 10,\r\n    fontFamily: 'monospace',\r\n  },\r\n});\r\n\r\nexport default UnifiedYouTubePlayer;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  FlatList, Modal, ScrollView, StyleSheet, Text,\r\n  TouchableOpacity, View\r\n} from 'react-native';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { CHORD_LIBRARY } from '../utils/chordLibrary';\r\nimport CompactRhythmTimeline from './CompactRhythmTimeline';\r\nimport EmbeddedRhythmSheet from './EmbeddedRhythmSheet';\r\nimport { ChordFingering, Fretboard } from './Fretboard.Enhanced';\r\nimport UnifiedYouTubePlayer, { YouTubePlayerRef } from './UnifiedYouTubePlayer';\r\n\r\ninterface ChordTiming {\r\n  chord: string;\r\n  startTime: number; // in seconds\r\n  duration: number; // in seconds\r\n}\r\n\r\ninterface SynchronizedChordPlayerProps {\r\n  videoId: string;\r\n  songTitle: string;\r\n  chordProgression: ChordTiming[];\r\n  onBack?: () => void;\r\n}\r\n\r\nexport const SynchronizedChordPlayer: React.FC<SynchronizedChordPlayerProps> = ({\r\n  videoId,\r\n  songTitle,\r\n  chordProgression,\r\n  onBack,\r\n}) => {\r\n  const { theme } = useTheme();\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [currentChordIndex, setCurrentChordIndex] = useState(0);\r\n  const [isLooping, setIsLooping] = useState(false);\r\n  const [fingeringStyle, setFingeringStyle] = useState<'open' | 'barre' | 'movable'>('open');\r\n  const [fingeringLocked, setFingeringLocked] = useState(false);\r\n  const [showFingeringModal, setShowFingeringModal] = useState(false);\r\n  const [fretboardSize, setFretboardSize] = useState<'small' | 'medium' | 'large'>('large');\r\n  const [forcePlayerState, setForcePlayerState] = useState<'play' | 'pause' | 'idle'>('idle');\r\n  const [timingOffset, setTimingOffset] = useState(0); // Offset in seconds to align chords with song\r\n\r\n  const playerRef = useRef<YouTubePlayerRef>(null);\r\n\r\n  // Get current chord based on YouTube player time with improved accuracy and silence detection\r\n  const getCurrentChord = useCallback(() => {\r\n    if (chordProgression.length === 0) return null;\r\n    \r\n    // Apply timing offset\r\n    const adjustedTime = currentTime + timingOffset;\r\n    \r\n    // Find chord that should be playing at current time\r\n    const activeChord = chordProgression.find((chord, index) => {\r\n      const chordEndTime = chord.startTime + chord.duration;\r\n      const isInTimeRange = adjustedTime >= chord.startTime && adjustedTime < chordEndTime;\r\n      \r\n      if (isInTimeRange) {\r\n        console.log(`🎸 Current chord at ${adjustedTime.toFixed(1)}s: ${chord.chord} (${chord.startTime}s - ${chordEndTime.toFixed(1)}s)`);\r\n      }\r\n      \r\n      return isInTimeRange;\r\n    });\r\n    \r\n    // If no chord is found, we might be in a silence period\r\n    if (!activeChord) {\r\n      console.log(`🔇 No chord at ${adjustedTime.toFixed(1)}s - likely silence period`);\r\n    }\r\n    \r\n    return activeChord || null; // Return null instead of first chord when in silence\r\n  }, [currentTime, chordProgression, timingOffset]);\r\n\r\n  // Get next chord for preview\r\n  const getNextChord = useCallback(() => {\r\n    if (chordProgression.length === 0) return null;\r\n    \r\n    // Apply timing offset\r\n    const adjustedTime = currentTime + timingOffset;\r\n    \r\n    const currentIndex = chordProgression.findIndex(chord => {\r\n      const chordEndTime = chord.startTime + chord.duration;\r\n      return adjustedTime >= chord.startTime && adjustedTime < chordEndTime;\r\n    });\r\n    \r\n    return currentIndex >= 0 && currentIndex < chordProgression.length - 1 \r\n      ? chordProgression[currentIndex + 1] \r\n      : null;\r\n  }, [currentTime, chordProgression, timingOffset]);\r\n\r\n  // Update current chord index based on time with better tracking\r\n  useEffect(() => {\r\n    if (chordProgression.length === 0) return;\r\n    \r\n    // Apply timing offset to current time for chord matching\r\n    const adjustedTime = currentTime + timingOffset;\r\n    \r\n    // Find chord that should be playing at current time\r\n    const activeChordIndex = chordProgression.findIndex(chord => {\r\n      const chordEndTime = chord.startTime + chord.duration;\r\n      return adjustedTime >= chord.startTime && adjustedTime < chordEndTime;\r\n    });\r\n    \r\n    if (activeChordIndex !== -1 && activeChordIndex !== currentChordIndex) {\r\n      const activeChord = chordProgression[activeChordIndex];\r\n      console.log('🎵 Chord progression update:', {\r\n        time: currentTime.toFixed(1),\r\n        adjustedTime: adjustedTime.toFixed(1),\r\n        chord: activeChord.chord,\r\n        index: activeChordIndex + 1,\r\n        total: chordProgression.length,\r\n        chordStart: activeChord.startTime,\r\n        chordEnd: (activeChord.startTime + activeChord.duration).toFixed(1),\r\n        nextChord: chordProgression[activeChordIndex + 1]?.chord || 'End'\r\n      });\r\n      setCurrentChordIndex(activeChordIndex);\r\n    } else if (activeChordIndex === -1 && currentChordIndex !== -1) {\r\n      // We're in a silence period\r\n      console.log('🔇 Entering silence period at', adjustedTime.toFixed(1));\r\n      setCurrentChordIndex(-1);\r\n    }\r\n  }, [currentTime, chordProgression, currentChordIndex, timingOffset]);\r\n\r\n  // Handle YouTube player time updates - this syncs with actual video playback\r\n  const handlePlayerTimeUpdate = useCallback((time: number) => {\r\n    // Add debugging to see if time updates are being received\r\n    if (time % 2 < 0.5) { // Log every 2 seconds to avoid spam\r\n      console.log('🎵 SynchronizedChordPlayer received time update:', time.toFixed(1));\r\n    }\r\n    setCurrentTime(time);\r\n  }, []);\r\n\r\n  // Handle YouTube player state changes\r\n  const handlePlayerStateChange = useCallback((playing: boolean) => {\r\n    console.log('SynchronizedChordPlayer state change - playing:', playing);\r\n    \r\n    // If YouTube starts playing but our state says not playing, sync up\r\n    if (playing && !isPlaying) {\r\n      console.log('🎬 YouTube started playing - syncing chord player state');\r\n      setIsPlaying(true);\r\n    } else if (!playing && isPlaying) {\r\n      console.log('⏸️ YouTube paused - syncing chord player state');\r\n      setIsPlaying(false);\r\n    }\r\n    \r\n    if (playing && !fingeringLocked) {\r\n      setFingeringLocked(true);\r\n    }\r\n  }, [fingeringLocked, isPlaying]);\r\n\r\n  // Force player state changes when buttons are pressed\r\n  useEffect(() => {\r\n    if (forcePlayerState === 'play' && playerRef.current) {\r\n      console.log('🎵 Forcing player to play');\r\n      playerRef.current.play();\r\n      setForcePlayerState('idle');\r\n    } else if (forcePlayerState === 'pause' && playerRef.current) {\r\n      console.log('⏸️ Forcing player to pause');\r\n      playerRef.current.pause();\r\n      setForcePlayerState('idle');\r\n    }\r\n  }, [forcePlayerState]);\r\n\r\n  // Get chord fingering based on style preference\r\n  const getChordFingering = useCallback((chordName: string): ChordFingering | null => {\r\n    const chordDef = CHORD_LIBRARY[chordName];\r\n    if (!chordDef || !chordDef.fingerings.length) {\r\n      console.warn('No chord definition found for:', chordName);\r\n      return null;\r\n    }\r\n\r\n    // Find fingering based on preferred style\r\n    const preferredFingering = chordDef.fingerings.find(f => f.type === fingeringStyle);\r\n    const result = preferredFingering || chordDef.fingerings[0];\r\n    console.log('Found fingering for', chordName, ':', result);\r\n    return result;\r\n  }, [fingeringStyle]);\r\n\r\n  const handleStartOver = () => {\r\n    console.log('🔄 Starting over - resetting to beginning');\r\n    // Reset player and time\r\n    if (playerRef.current) {\r\n      playerRef.current.seekTo(0);\r\n    }\r\n    setCurrentTime(0);\r\n    setCurrentChordIndex(0);\r\n    setIsPlaying(false);\r\n    setForcePlayerState('pause');\r\n  };\r\n\r\n  const handleLoop = () => {\r\n    setIsLooping(!isLooping);\r\n    // Note: Loop will be handled by the YouTube player's onStateChange\r\n  };\r\n\r\n  // Handle seeking to specific chord\r\n  const handleSeekToChord = (chordIndex: number) => {\r\n    const chord = chordProgression[chordIndex];\r\n    if (chord && playerRef.current) {\r\n      playerRef.current.seekTo(chord.startTime);\r\n      setCurrentTime(chord.startTime);\r\n      setCurrentChordIndex(chordIndex);\r\n    }\r\n  };\r\n\r\n  const renderChordProgress = () => {\r\n    return (\r\n      <View style={styles.progressContainer}>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n          {chordProgression.map((item, index) => {\r\n            const isActive = index === currentChordIndex;\r\n            const isPast = currentTime > item.startTime + item.duration;\r\n            const isUpcoming = currentTime < item.startTime;\r\n            \r\n            return (\r\n              <TouchableOpacity\r\n                key={index}\r\n                style={[\r\n                  styles.chordProgressItem,\r\n                  {\r\n                    backgroundColor: isActive \r\n                      ? theme.primary \r\n                      : isPast \r\n                        ? theme.primary + '40'\r\n                        : theme.surface,\r\n                    borderColor: isActive ? theme.primary : theme.divider,\r\n                  }\r\n                ]}\r\n                onPress={() => handleSeekToChord(index)}\r\n              >\r\n                <Text style={[\r\n                  styles.chordProgressText,\r\n                  { \r\n                    color: isActive ? '#fff' : theme.text,\r\n                    fontWeight: isActive ? 'bold' : 'normal'\r\n                  }\r\n                ]}>\r\n                  {item.chord}\r\n                </Text>\r\n                <Text style={[\r\n                  styles.chordTimeText,\r\n                  { color: isActive ? '#fff' : theme.secondaryText }\r\n                ]}>\r\n                  {Math.floor(item.startTime)}s\r\n                </Text>\r\n              </TouchableOpacity>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderFingeringModal = () => {\r\n    const currentChord = getCurrentChord();\r\n    if (!currentChord) return null;\r\n\r\n    const chordDef = CHORD_LIBRARY[currentChord.chord];\r\n    if (!chordDef) return null;\r\n\r\n    return (\r\n      <Modal\r\n        visible={showFingeringModal}\r\n        transparent\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setShowFingeringModal(false)}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={[styles.modalContent, { backgroundColor: theme.surface }]}>\r\n            <View style={styles.modalHeader}>\r\n              <Text style={[styles.modalTitle, { color: theme.text }]}>\r\n                Choose {currentChord.chord} Fingering Style\r\n              </Text>\r\n              <TouchableOpacity\r\n                onPress={() => setShowFingeringModal(false)}\r\n                style={styles.closeButton}\r\n              >\r\n                <Text style={[styles.closeButtonText, { color: theme.text }]}>✕</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            <FlatList\r\n              data={chordDef.fingerings}\r\n              keyExtractor={(item, index) => `${item.type}-${index}`}\r\n              renderItem={({ item, index }) => (\r\n                <TouchableOpacity\r\n                  style={[\r\n                    styles.fingeringOption,\r\n                    {\r\n                      backgroundColor: fingeringStyle === item.type ? theme.primary + '20' : 'transparent',\r\n                      borderColor: fingeringStyle === item.type ? theme.primary : theme.divider,\r\n                    }\r\n                  ]}\r\n                  onPress={() => {\r\n                    setFingeringStyle(item.type);\r\n                    setShowFingeringModal(false);\r\n                  }}\r\n                >\r\n                  <View style={styles.fingeringPreview}>\r\n                    <Fretboard\r\n                      chord={currentChord.chord}\r\n                      fingering={item}\r\n                      theme={theme}\r\n                      size=\"small\"\r\n                    />\r\n                  </View>\r\n                  <Text style={[styles.fingeringLabel, { color: theme.text }]}>\r\n                    {item.type.charAt(0).toUpperCase() + item.type.slice(1)} - {item.name}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const currentChord = getCurrentChord();\r\n  const currentFingering = currentChord ? getChordFingering(currentChord.chord) : null;\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: theme.background }]}>\r\n      {/* Header */}\r\n      <View style={[styles.header, { backgroundColor: theme.surface }]}>\r\n        <TouchableOpacity onPress={onBack} style={styles.backButton}>\r\n          <Text style={[styles.backButtonText, { color: theme.primary }]}>← Back</Text>\r\n        </TouchableOpacity>\r\n        <Text style={[styles.songTitle, { color: theme.text }]} numberOfLines={2}>\r\n          {songTitle}\r\n        </Text>\r\n        <Text style={{ color: theme.secondaryText, fontSize: 12, fontFamily: 'monospace' }}>\r\n          Debug: {currentTime.toFixed(1)}s | Chord {currentChordIndex + 1}/{chordProgression.length} | Playing: {isPlaying ? 'Yes' : 'No'} | Offset: {timingOffset > 0 ? '+' : ''}{timingOffset}s\r\n          {chordProgression[currentChordIndex] && (\r\n            <Text> | Current: {chordProgression[currentChordIndex].chord} ({chordProgression[currentChordIndex].startTime}s)</Text>\r\n          )}\r\n        </Text>\r\n      </View>\r\n\r\n      <ScrollView style={styles.content}>\r\n        {/* YouTube Player */}\r\n        <View style={styles.playerContainer}>\r\n          <UnifiedYouTubePlayer\r\n            ref={playerRef}\r\n            videoId={videoId}\r\n            height={200}\r\n            playing={isPlaying}\r\n            onTimeUpdate={handlePlayerTimeUpdate}\r\n            onPlayingChange={handlePlayerStateChange}\r\n            onChangeState={(state) => {\r\n              console.log('Player state changed:', state);\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        {/* Controls */}\r\n        <View style={[styles.controls, { backgroundColor: theme.surface }]}>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.controlButton, \r\n              { \r\n                backgroundColor: isPlaying ? theme.secondary : theme.primary,\r\n                flex: 1 \r\n              }\r\n            ]}\r\n            onPress={() => {\r\n              console.log('🎵 Play/Pause button pressed, current state:', isPlaying);\r\n              if (isPlaying) {\r\n                // Pause playback\r\n                console.log('⏸️ Pausing playback');\r\n                setIsPlaying(false);\r\n                setForcePlayerState('pause');\r\n              } else {\r\n                // Start playback and chord progression\r\n                console.log('▶️ Starting synchronized playback');\r\n                setIsPlaying(true);\r\n                setForcePlayerState('play');\r\n              }\r\n            }}\r\n          >\r\n            <Text style={styles.controlButtonText}>\r\n              {isPlaying ? '⏸️ Pause' : '▶️ Start Playing'} \r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.controlButton, { backgroundColor: theme.secondary }]}\r\n            onPress={handleStartOver}\r\n          >\r\n            <Text style={styles.controlButtonText}>🔄 Start Over</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.controlButton,\r\n              { backgroundColor: isLooping ? theme.primary : theme.secondary }\r\n            ]}\r\n            onPress={handleLoop}\r\n          >\r\n            <Text style={styles.controlButtonText}>🔁 Loop</Text>\r\n          </TouchableOpacity>\r\n\r\n          {!fingeringLocked && (\r\n            <TouchableOpacity\r\n              style={[styles.controlButton, { backgroundColor: theme.primary }]}\r\n              onPress={() => setShowFingeringModal(true)}\r\n            >\r\n              <Text style={styles.controlButtonText}>🎸 Style</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          {/* Timing adjustment controls */}\r\n          <TouchableOpacity\r\n            style={[styles.controlButton, { backgroundColor: theme.secondary }]}\r\n            onPress={() => setTimingOffset(offset => Math.max(-10, offset - 0.5))}\r\n          >\r\n            <Text style={styles.controlButtonText}>⏪ -0.5s</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.controlButton, { backgroundColor: theme.secondary }]}\r\n            onPress={() => setTimingOffset(offset => Math.min(10, offset + 0.5))}\r\n          >\r\n            <Text style={styles.controlButtonText}>⏩ +0.5s</Text>\r\n          </TouchableOpacity>\r\n\r\n          {timingOffset !== 0 && (\r\n            <TouchableOpacity\r\n              style={[styles.controlButton, { backgroundColor: '#ff6b6b' }]}\r\n              onPress={() => setTimingOffset(0)}\r\n            >\r\n              <Text style={styles.controlButtonText}>↩️ Reset</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n\r\n        {/* Unified View: Rhythm Timeline + Sheet + Fretboard */}\r\n        \r\n        {/* Compact Rhythm Timeline */}\r\n        <CompactRhythmTimeline\r\n          chordProgression={chordProgression}\r\n          currentTime={currentTime + timingOffset}\r\n          isPlaying={isPlaying}\r\n          theme={theme}\r\n          onSeekToTime={(time) => {\r\n            if (playerRef.current) {\r\n              playerRef.current.seekTo(time - timingOffset); // Adjust for offset when seeking\r\n              setCurrentTime(time - timingOffset);\r\n            }\r\n          }}\r\n        />\r\n\r\n        {/* Embedded Rhythm Sheet */}\r\n        <EmbeddedRhythmSheet\r\n          chordProgression={chordProgression}\r\n          currentTime={currentTime + timingOffset}\r\n          isPlaying={isPlaying}\r\n          theme={theme}\r\n          onSeekToTime={(time) => {\r\n            if (playerRef.current) {\r\n              playerRef.current.seekTo(time - timingOffset); // Adjust for offset when seeking\r\n              setCurrentTime(time - timingOffset);\r\n            }\r\n          }}\r\n        />\r\n\r\n        {/* Current Chord Display with Next Chord Preview */}\r\n        {(() => {\r\n          const currentChord = getCurrentChord();\r\n          const nextChord = getNextChord();\r\n          const currentFingering = currentChord ? getChordFingering(currentChord.chord) : null;\r\n          const nextFingering = nextChord ? getChordFingering(nextChord.chord) : null;\r\n          \r\n          // Show silence indicator when no chord is playing\r\n          if (!currentChord) {\r\n            return (\r\n              <View style={[styles.chordDisplay, { backgroundColor: theme.surface }]}>\r\n                <Text style={[styles.currentChordLabel, { color: theme.secondaryText }]}>\r\n                  🔇 Silence Period\r\n                </Text>\r\n                <Text style={[styles.fingeringStyle, { color: theme.secondaryText }]}>\r\n                  No chords playing - this might be an instrumental break or quiet section\r\n                </Text>\r\n                {nextChord && (\r\n                  <View style={styles.nextChordPreview}>\r\n                    <Text style={[styles.nextChordLabel, { color: theme.text }]}>\r\n                      Next chord: {nextChord.chord} at {nextChord.startTime}s\r\n                    </Text>\r\n                  </View>\r\n                )}\r\n              </View>\r\n            );\r\n          }\r\n          \r\n          return currentFingering ? (\r\n              <View style={[styles.chordDisplay, { backgroundColor: theme.surface }]}>\r\n                <View style={styles.currentNextContainer}>\r\n                  {/* Current Chord */}\r\n                  <View style={styles.currentChordSection}>\r\n                    <Text style={[styles.currentChordLabel, { color: theme.text }]}>\r\n                      Now Playing\r\n                    </Text>\r\n                    <Text style={[styles.chordName, { color: theme.primary }]}>\r\n                      {currentChord.chord}\r\n                    </Text>\r\n                    <View style={styles.fretboardContainer}>\r\n                      <Fretboard\r\n                        chord={currentChord.chord}\r\n                        fingering={currentFingering}\r\n                        theme={theme}\r\n                        size={fretboardSize}\r\n                        isHighlighted={isPlaying}\r\n                        animationDelay={0}\r\n                      />\r\n                    </View>\r\n                  </View>\r\n\r\n                  {/* Next Chord Preview */}\r\n                  {nextChord && nextFingering && (\r\n                    <View style={styles.nextChordSection}>\r\n                      <Text style={[styles.nextChordLabel, { color: theme.secondaryText }]}>\r\n                        Next Up\r\n                      </Text>\r\n                      <Text style={[styles.nextChordName, { color: theme.text }]}>\r\n                        {nextChord.chord}\r\n                      </Text>\r\n                      <Text style={[styles.nextChordTime, { color: theme.secondaryText }]}>\r\n                        in {Math.max(0, Math.floor(nextChord.startTime - currentTime))}s\r\n                      </Text>\r\n                      <View style={styles.nextFretboardContainer}>\r\n                        <Fretboard\r\n                          chord={nextChord.chord}\r\n                          fingering={nextFingering}\r\n                          theme={theme}\r\n                          size=\"small\"\r\n                          isHighlighted={false}\r\n                          animationDelay={0}\r\n                        />\r\n                      </View>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n\r\n                <Text style={[styles.fingeringStyle, { color: theme.secondaryText }]}>\r\n                  {fingeringStyle.charAt(0).toUpperCase() + fingeringStyle.slice(1)} Style\r\n                  {fingeringLocked && ' (Locked)'}\r\n                </Text>\r\n\r\n                {/* Fretboard Size Controls */}\r\n                <View style={styles.sizeControls}>\r\n                  {(['small', 'medium', 'large'] as const).map((size) => (\r\n                    <TouchableOpacity\r\n                      key={size}\r\n                      style={[\r\n                        styles.sizeButton,\r\n                        {\r\n                          backgroundColor: fretboardSize === size ? theme.primary : theme.secondary,\r\n                        }\r\n                      ]}\r\n                      onPress={() => setFretboardSize(size)}\r\n                    >\r\n                      <Text style={styles.sizeButtonText}>\r\n                        {size.charAt(0).toUpperCase() + size.slice(1)}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  ))}\r\n                </View>\r\n              </View>\r\n              ) : null;\r\n            })()}\r\n      </ScrollView>\r\n\r\n      {renderFingeringModal()}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    paddingTop: 50,\r\n    elevation: 2,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n  },\r\n  backButton: {\r\n    marginRight: 16,\r\n  },\r\n  backButtonText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  songTitle: {\r\n    flex: 1,\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  playerContainer: {\r\n    margin: 16,\r\n    borderRadius: 12,\r\n    overflow: 'hidden',\r\n  },\r\n  controls: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 16,\r\n    marginHorizontal: 16,\r\n    borderRadius: 12,\r\n    marginBottom: 16,\r\n  },\r\n  controlButton: {\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    minWidth: 80,\r\n    alignItems: 'center',\r\n  },\r\n  controlButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n  },\r\n  progressContainer: {\r\n    marginHorizontal: 16,\r\n    marginBottom: 16,\r\n  },\r\n  chordProgressItem: {\r\n    padding: 12,\r\n    marginRight: 8,\r\n    borderRadius: 8,\r\n    borderWidth: 2,\r\n    minWidth: 60,\r\n    alignItems: 'center',\r\n  },\r\n  chordProgressText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  chordTimeText: {\r\n    fontSize: 10,\r\n    marginTop: 2,\r\n  },\r\n  chordDisplay: {\r\n    margin: 16,\r\n    padding: 20,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n  },\r\n  currentChordLabel: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  fingeringStyle: {\r\n    fontSize: 14,\r\n    marginBottom: 20,\r\n  },\r\n  fretboardContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  sizeControls: {\r\n    flexDirection: 'row',\r\n    gap: 8,\r\n  },\r\n  sizeButton: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 6,\r\n  },\r\n  sizeButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 12,\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContent: {\r\n    width: '90%',\r\n    maxHeight: '80%',\r\n    borderRadius: 12,\r\n    padding: 20,\r\n  },\r\n  modalHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n  },\r\n  closeButton: {\r\n    padding: 4,\r\n  },\r\n  closeButtonText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  fingeringOption: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    borderWidth: 1,\r\n    marginBottom: 8,\r\n  },\r\n  fingeringPreview: {\r\n    marginRight: 16,\r\n  },\r\n  fingeringLabel: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n  },\r\n  chordPreviewSection: {\r\n    margin: 16,\r\n    padding: 16,\r\n    borderRadius: 12,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 12,\r\n    textAlign: 'center',\r\n  },\r\n  chordPreviewContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  chordPreviewItem: {\r\n    alignItems: 'center',\r\n    marginRight: 16,\r\n    padding: 8,\r\n    minWidth: 80,\r\n  },\r\n  previewChordName: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    marginBottom: 4,\r\n  },\r\n  previewTimeText: {\r\n    fontSize: 10,\r\n    marginBottom: 8,\r\n  },\r\n  miniatureFretboard: {\r\n    borderWidth: 2,\r\n    borderRadius: 8,\r\n    padding: 4,\r\n  },\r\n  currentNextContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n    marginBottom: 20,\r\n  },\r\n  currentChordSection: {\r\n    flex: 2,\r\n    alignItems: 'center',\r\n    marginRight: 16,\r\n  },\r\n  nextChordSection: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    padding: 12,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n    borderRadius: 8,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(255, 255, 255, 0.1)',\r\n  },\r\n  chordName: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  nextChordLabel: {\r\n    fontSize: 12,\r\n    textTransform: 'uppercase',\r\n    marginBottom: 4,\r\n  },\r\n  nextChordName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  nextChordTime: {\r\n    fontSize: 11,\r\n    marginBottom: 8,\r\n  },\r\n  nextFretboardContainer: {\r\n    alignItems: 'center',\r\n  },\r\n  nextIndicator: {\r\n    fontSize: 8,\r\n    fontWeight: 'bold',\r\n    marginTop: 2,\r\n  },\r\n  progressIndicator: {\r\n    marginTop: 16,\r\n    paddingHorizontal: 16,\r\n  },\r\n  progressText: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  progressBar: {\r\n    height: 4,\r\n    borderRadius: 2,\r\n    overflow: 'hidden',\r\n  },\r\n  progressFill: {\r\n    height: '100%',\r\n    borderRadius: 2,\r\n  },\r\n  nextChordPreview: {\r\n    marginTop: 16,\r\n    padding: 12,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default SynchronizedChordPlayer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, StyleSheet, Text, View } from 'react-native';\r\nimport { analyzeChords, ChordData } from '../api/chords';\r\nimport { SynchronizedChordPlayer } from '../components/SynchronizedChordPlayer';\r\n\r\ninterface ChordTiming {\r\n  chord: string;\r\n  startTime: number;\r\n  duration: number;\r\n}\r\n\r\nconst ChordPlayerScreen = ({ route, navigation }: any) => {\r\n  const { youtubeUrl, songTitle, thumbnail, channel } = route.params;\r\n  const [chordProgression, setChordProgression] = useState<ChordTiming[]>([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Extract video ID from YouTube URL\r\n  const getVideoId = (url: string) => {\r\n    const match = url.match(/(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&\\n?#]+)/);\r\n    return match ? match[1] : '';\r\n  };\r\n\r\n  // Convert ChordData to ChordTiming format\r\n  const convertToChordTiming = (chordData: ChordData[]): ChordTiming[] => {\r\n    return chordData.map((chord, index) => {\r\n      const nextChord = chordData[index + 1];\r\n      const duration = nextChord ? nextChord.time - chord.time : 4; // Default 4 seconds for last chord\r\n      \r\n      return {\r\n        chord: chord.chord,\r\n        startTime: chord.time,\r\n        duration: Math.max(0.5, duration), // Minimum 0.5 seconds\r\n      };\r\n    });\r\n  };\r\n\r\n  // Generate realistic chord progression based on song analysis with silence detection\r\n  const generateRealisticProgression = (songTitle: string, duration: number = 240): ChordTiming[] => {\r\n    console.log('🎵 Generating chord progression for:', songTitle);\r\n    \r\n    // Song structures with verses, chorus, bridge patterns and silence periods\r\n    const songStructures = {\r\n      hotel_california: {\r\n        intro: ['Am', 'E', 'G', 'D', 'F', 'C', 'Dm', 'E'],\r\n        verse: ['Am', 'E', 'G', 'D', 'F', 'C', 'Dm', 'E'],\r\n        chorus: ['F', 'C', 'E', 'Am', 'F', 'C', 'Dm', 'E'],\r\n        bridge: ['Am', 'E', 'G', 'D', 'F', 'C', 'Dm', 'E'],\r\n        outro: ['Am', 'E', 'G', 'D', 'F', 'C', 'Dm', 'E', 'Am'],\r\n        silencePeriods: [\r\n          { start: 0, end: 8 },      // Quiet intro\r\n          { start: 120, end: 125 },  // Brief pause mid-song\r\n          { start: 200, end: 210 }   // Outro fade\r\n        ]\r\n      },\r\n      wonderwall: {\r\n        intro: ['Em7', 'G', 'D', 'C'],\r\n        verse: ['Em7', 'G', 'D', 'C', 'Em7', 'G', 'D', 'C'],\r\n        chorus: ['C', 'D', 'G', 'Em7', 'C', 'D', 'G', 'G'],\r\n        bridge: ['C', 'D', 'G', 'Em7', 'C', 'D', 'Em7', 'Em7'],\r\n        outro: ['Em7', 'G', 'D', 'C', 'Em7'],\r\n        silencePeriods: [\r\n          { start: 0, end: 4 },      // Short intro\r\n          { start: 180, end: 190 }   // Outro fade\r\n        ]\r\n      },\r\n      default: {\r\n        intro: ['C', 'G', 'Am', 'F'],\r\n        verse: ['C', 'G', 'Am', 'F', 'C', 'G', 'F', 'C'],\r\n        chorus: ['F', 'C', 'G', 'Am', 'F', 'C', 'G', 'G'],\r\n        bridge: ['Am', 'F', 'C', 'G', 'Am', 'F', 'G', 'G'],\r\n        outro: ['C', 'G', 'Am', 'F', 'C'],\r\n        silencePeriods: [\r\n          { start: 0, end: 2 },      // Brief intro\r\n          { start: 160, end: 170 }   // Outro fade\r\n        ]\r\n      }\r\n    };\r\n\r\n    // Detect song structure\r\n    const title = songTitle.toLowerCase();\r\n    let structure = songStructures.default;\r\n    \r\n    if (title.includes('hotel') || title.includes('california')) {\r\n      structure = songStructures.hotel_california;\r\n      console.log('🎸 Using Hotel California structure');\r\n    } else if (title.includes('wonderwall')) {\r\n      structure = songStructures.wonderwall;\r\n      console.log('🎸 Using Wonderwall structure');\r\n    } else {\r\n      console.log('🎸 Using default structure');\r\n    }\r\n\r\n    // Create full song progression with typical song structure\r\n    const fullProgression: string[] = [];\r\n    \r\n    // Intro (8-16 seconds)\r\n    fullProgression.push(...structure.intro);\r\n    console.log('After intro:', fullProgression.length, 'chords');\r\n    \r\n    // Verse 1 (16-32 seconds)  \r\n    fullProgression.push(...structure.verse);\r\n    console.log('After verse 1:', fullProgression.length, 'chords');\r\n    \r\n    // Chorus 1 (16-24 seconds)\r\n    fullProgression.push(...structure.chorus);\r\n    console.log('After chorus 1:', fullProgression.length, 'chords');\r\n    \r\n    // Verse 2 (16-32 seconds)\r\n    fullProgression.push(...structure.verse);\r\n    console.log('After verse 2:', fullProgression.length, 'chords');\r\n    \r\n    // Chorus 2 (16-24 seconds)\r\n    fullProgression.push(...structure.chorus);\r\n    console.log('After chorus 2:', fullProgression.length, 'chords');\r\n    \r\n    // Bridge/Solo (16-32 seconds)\r\n    fullProgression.push(...structure.bridge);\r\n    console.log('After bridge:', fullProgression.length, 'chords');\r\n    \r\n    // Final Chorus (16-24 seconds)\r\n    fullProgression.push(...structure.chorus);\r\n    console.log('After final chorus:', fullProgression.length, 'chords');\r\n    \r\n    // Outro (8-16 seconds)\r\n    fullProgression.push(...structure.outro);\r\n    console.log('Final progression length:', fullProgression.length, 'chords');\r\n\r\n    // Convert to timed progression with silence detection\r\n    const chords: ChordTiming[] = [];\r\n    let currentTime = 0;\r\n    \r\n    // Helper function to check if a time is in a silence period\r\n    const isInSilencePeriod = (time: number): boolean => {\r\n      if (!structure.silencePeriods) return false;\r\n      return structure.silencePeriods.some(period => \r\n        time >= period.start && time < period.end\r\n      );\r\n    };\r\n    \r\n    fullProgression.forEach((chord, index) => {\r\n      // Skip adding chord if we're in a silence period\r\n      if (isInSilencePeriod(currentTime)) {\r\n        console.log(`🔇 Skipping chord ${chord} at ${currentTime}s - in silence period`);\r\n        currentTime += 2; // Short gap during silence\r\n        return;\r\n      }\r\n      \r\n      // More realistic chord duration based on song section and musical timing\r\n      let chordDuration = 4; // Base duration (one measure in 4/4 time)\r\n      \r\n      // Intro chords often last longer for atmosphere\r\n      if (index < structure.intro.length) {\r\n        chordDuration = Math.random() > 0.5 ? 8 : 6; // 2 measures or 1.5 measures\r\n      }\r\n      // Outro chords fade out slowly\r\n      else if (index >= fullProgression.length - structure.outro.length) {\r\n        chordDuration = Math.random() > 0.3 ? 8 : 6;\r\n      }\r\n      // Verse chords are steady\r\n      else if (index < structure.intro.length + structure.verse.length * 2) {\r\n        chordDuration = Math.random() > 0.8 ? 2 : 4; // Occasional quick changes\r\n      }\r\n      // Chorus chords can be varied for energy\r\n      else {\r\n        const rand = Math.random();\r\n        if (rand > 0.9) chordDuration = 2;      // Quick change (half measure)\r\n        else if (rand > 0.7) chordDuration = 8; // Long chord (two measures)\r\n        else chordDuration = 4;                 // Standard (one measure)\r\n      }\r\n      \r\n      chords.push({\r\n        chord,\r\n        startTime: currentTime,\r\n        duration: chordDuration,\r\n      });\r\n      \r\n      currentTime += chordDuration;\r\n    });\r\n    \r\n    // Filter out any chords that would be entirely in silence periods\r\n    const filteredChords = chords.filter(chord => {\r\n      const chordEnd = chord.startTime + chord.duration;\r\n      // Keep chord if any part of it is NOT in a silence period\r\n      for (let t = chord.startTime; t < chordEnd; t += 0.5) {\r\n        if (!isInSilencePeriod(t)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    \r\n    console.log('Generated chord progression:', filteredChords.length, 'chords, total duration:', currentTime, 'seconds');\r\n    console.log('Silence periods:', structure.silencePeriods || 'None');\r\n    console.log('Filtered out', chords.length - filteredChords.length, 'chords in silence periods');\r\n    console.log('Structure used:', {\r\n      intro: structure.intro.length,\r\n      verse: structure.verse.length,\r\n      chorus: structure.chorus.length,\r\n      bridge: structure.bridge.length,\r\n      outro: structure.outro.length\r\n    });\r\n    console.log('First 10 chords:', filteredChords.slice(0, 10));\r\n    console.log('Last 10 chords:', filteredChords.slice(-10));\r\n    \r\n    return filteredChords;\r\n  };\r\n\r\n  // Analyze chords when component mounts\r\n  useEffect(() => {\r\n    const analyzeVideo = async () => {\r\n      try {\r\n        setIsAnalyzing(true);\r\n        setError(null);\r\n        \r\n        // Try to get real chord analysis\r\n        const chordData = await analyzeChords(youtubeUrl);\r\n        \r\n        if (chordData.length < 10) { // Minimum threshold for realistic song\r\n          console.log('🎵 API returned insufficient chords:', chordData.length, '- using fallback');\r\n          // Generate realistic progression based on song title\r\n          const realisticProgression = generateRealisticProgression(songTitle, 180);\r\n          console.log('Generated realistic progression:', realisticProgression);\r\n          setChordProgression(realisticProgression);\r\n        } else {\r\n          console.log('🎵 Using API chord data:', chordData.length, 'chords');\r\n          const chordTiming = convertToChordTiming(chordData);\r\n          console.log('Converted chord timing:', chordTiming);\r\n          setChordProgression(chordTiming);\r\n        }\r\n      } catch (error) {\r\n        console.error('Chord analysis failed:', error);\r\n        setError(error instanceof Error ? error.message : 'Analysis failed');\r\n        \r\n        // Generate realistic fallback based on song title\r\n        const realisticProgression = generateRealisticProgression(songTitle, 180);\r\n        console.log('Fallback realistic progression:', realisticProgression);\r\n        setChordProgression(realisticProgression);\r\n      } finally {\r\n        setIsAnalyzing(false);\r\n      }\r\n    };\r\n\r\n    analyzeVideo();\r\n  }, [youtubeUrl]);\r\n\r\n  const videoId = getVideoId(youtubeUrl);\r\n\r\n  if (isAnalyzing) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#007bff\" />\r\n        <Text style={styles.loadingText}>Analyzing chord progression...</Text>\r\n        <Text style={styles.loadingSubtext}>This may take a few moments</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>Analysis Error</Text>\r\n        <Text style={styles.errorMessage}>{error}</Text>\r\n        <Text style={styles.errorSubtext}>Using fallback chord progression</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <SynchronizedChordPlayer\r\n        videoId={videoId}\r\n        songTitle={songTitle}\r\n        chordProgression={chordProgression}\r\n        onBack={() => navigation.goBack()}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n    padding: 20,\r\n  },\r\n  loadingText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n  },\r\n  loadingSubtext: {\r\n    color: '#888',\r\n    fontSize: 14,\r\n    marginTop: 8,\r\n    textAlign: 'center',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n    padding: 20,\r\n  },\r\n  errorText: {\r\n    color: '#ff6b6b',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  errorMessage: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  errorSubtext: {\r\n    color: '#888',\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default ChordPlayerScreen;","import { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport React from 'react';\r\nimport {\r\n  ScrollView, StyleSheet, Text, TouchableOpacity, View\r\n} from 'react-native';\r\nimport { useAuth } from '../context/AuthProvider';\r\nimport { RootStackParamList } from '../navigation/types';\r\n\r\ntype HomeScreenNavigationProp = NativeStackNavigationProp<\r\n  RootStackParamList,\r\n  'Home'\r\n>;\r\n\r\nexport default function HomeScreen() {\r\n  const navigation = useNavigation<HomeScreenNavigationProp>();\r\n  const { user, logout, isConnected, isLoading } = useAuth();\r\n\r\n  const handleAuthAction = () => {\r\n    if (user) {\r\n      logout();\r\n    } else {\r\n      navigation.navigate('Auth');\r\n    }\r\n  };\r\n\r\n  const handleSearchPress = () => {\r\n    navigation.navigate('Search');\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {/* User Welcome Section */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.welcomeText}>\r\n          {user ? `Welcome back, ${user?.email?.split('@')[0]}!` : 'Welcome to ChordsLegend!'}\r\n        </Text>\r\n        <Text style={styles.subtitle}>\r\n          Discover chords for your favorite songs\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.quickActions}>\r\n        <TouchableOpacity\r\n          style={styles.actionButton}\r\n          onPress={() => navigation.navigate('Search')}\r\n        >\r\n          <Text style={styles.actionIcon}>🔍</Text>\r\n          <Text style={styles.actionText}>Search Songs</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={styles.actionButton}\r\n          onPress={() => navigation.navigate('Library')}\r\n        >\r\n          <Text style={styles.actionIcon}>📚</Text>\r\n          <Text style={styles.actionText}>My Library</Text>\r\n        </TouchableOpacity>\r\n\r\n\r\n\r\n        <TouchableOpacity\r\n          style={styles.actionButton}\r\n          onPress={handleAuthAction}\r\n        >\r\n          <Text style={styles.actionIcon}>{user ? '🚪' : '🔐'}</Text>\r\n          <Text style={styles.actionText}>{user ? 'Logout' : 'Login / Sign Up'}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>How It Works</Text>\r\n        <View style={styles.howItWorks}>\r\n          <View style={styles.step}>\r\n            <Text style={styles.stepNumber}>1</Text>\r\n            <Text style={styles.stepText}>Search for any song</Text>\r\n          </View>\r\n          <View style={styles.step}>\r\n            <Text style={styles.stepNumber}>2</Text>\r\n            <Text style={styles.stepText}>Get instant chord analysis</Text>\r\n          </View>\r\n          <View style={styles.step}>\r\n            <Text style={styles.stepNumber}>3</Text>\r\n            <Text style={styles.stepText}>Play along with chords</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    paddingTop: 40,\r\n  },\r\n  welcomeText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 8,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#888',\r\n  },\r\n  quickActions: {\r\n    flexDirection: 'row',\r\n    padding: 20,\r\n    gap: 15,\r\n  },\r\n  actionButton: {\r\n    flex: 1,\r\n    backgroundColor: '#333',\r\n    padding: 20,\r\n    borderRadius: 15,\r\n    alignItems: 'center',\r\n  },\r\n  actionIcon: {\r\n    fontSize: 30,\r\n    marginBottom: 10,\r\n  },\r\n  actionText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  section: {\r\n    padding: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 15,\r\n  },\r\n  sectionSubtitle: {\r\n    fontSize: 14,\r\n    color: '#888',\r\n    marginBottom: 15,\r\n  },\r\n  featuredItem: {\r\n    width: 160,\r\n    marginRight: 15,\r\n  },\r\n  featuredImage: {\r\n    width: 160,\r\n    height: 120,\r\n    borderRadius: 10,\r\n    marginBottom: 8,\r\n  },\r\n  featuredTitle: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n  },\r\n  debugButton: {\r\n    backgroundColor: '#ff6b35',\r\n  },\r\n  howItWorks: {\r\n    gap: 15,\r\n  },\r\n  step: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  stepNumber: {\r\n    width: 30,\r\n    height: 30,\r\n    backgroundColor: '#007AFF',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    lineHeight: 30,\r\n    borderRadius: 15,\r\n    fontWeight: 'bold',\r\n    marginRight: 15,\r\n  },\r\n  stepText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    marginLeft: 15,\r\n    flex: 1,\r\n  },\r\n  statusContainer: {\r\n    padding: 10,\r\n    margin: 15,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n  },\r\n  statusText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Alert, FlatList, Image, StyleSheet, Text, TouchableOpacity, View\r\n} from 'react-native';\r\nimport { RootStackParamList } from '../navigation/types';\r\n\r\ntype LibraryScreenNavigationProp = NativeStackNavigationProp<\r\n  RootStackParamList,\r\n  'Library'\r\n>;\r\n\r\ninterface FavoriteSong {\r\n  id: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  channelTitle: string;\r\n  dateAdded: string;\r\n}\r\n\r\nexport default function LibraryScreen() {\r\n  const [favorites, setFavorites] = useState<FavoriteSong[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigation = useNavigation<LibraryScreenNavigationProp>();\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      loadFavorites();\r\n    }, [])\r\n  );\r\n\r\n  const loadFavorites = async () => {\r\n    try {\r\n      const savedFavorites = await AsyncStorage.getItem('favorites');\r\n      if (savedFavorites) {\r\n        setFavorites(JSON.parse(savedFavorites));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading favorites:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const removeFavorite = async (songId: string) => {\r\n    Alert.alert(\r\n      'Remove Favorite',\r\n      'Are you sure you want to remove this song from favorites?',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        {\r\n          text: 'Remove',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              const updatedFavorites = favorites.filter(song => song.id !== songId);\r\n              setFavorites(updatedFavorites);\r\n              await AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n            } catch (error) {\r\n              console.error('Error removing favorite:', error);\r\n            }\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  const handleSelectSong = (song: FavoriteSong) => {\r\n    navigation.navigate('ChordPlayer', {\r\n      youtubeUrl: `https://www.youtube.com/watch?v=${song.id}`,\r\n      songTitle: song.title,\r\n      thumbnail: song.thumbnail,\r\n      channel: song.channelTitle,\r\n      chords: [],\r\n    });\r\n  };\r\n\r\n  const renderFavoriteItem = ({ item }: { item: FavoriteSong }) => (\r\n    <TouchableOpacity\r\n      style={styles.favoriteItem}\r\n      onPress={() => handleSelectSong(item)}\r\n    >\r\n      <Image source={{ uri: item.thumbnail }} style={styles.thumbnail} />\r\n      <View style={styles.songInfo}>\r\n        <Text style={styles.songTitle} numberOfLines={2}>\r\n          {item.title}\r\n        </Text>\r\n        <Text style={styles.channelTitle} numberOfLines={1}>\r\n          {item.channelTitle}\r\n        </Text>\r\n        <Text style={styles.dateAdded}>\r\n          Added {new Date(item.dateAdded).toLocaleDateString()}\r\n        </Text>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.removeButton}\r\n        onPress={() => removeFavorite(item.id)}\r\n      >\r\n        <Text style={styles.removeButtonText}>×</Text>\r\n      </TouchableOpacity>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.centerContainer}>\r\n        <Text style={styles.loadingText}>Loading favorites...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>My Favorites</Text>\r\n        <Text style={styles.headerSubtitle}>\r\n          {favorites.length} song{favorites.length !== 1 ? 's' : ''}\r\n        </Text>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={favorites}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={renderFavoriteItem}\r\n        contentContainerStyle={favorites.length === 0 ? styles.emptyContainer : undefined}\r\n        ListEmptyComponent={\r\n          <View style={styles.emptyState}>\r\n            <Text style={styles.emptyIcon}>🎵</Text>\r\n            <Text style={styles.emptyTitle}>No favorites yet</Text>\r\n            <Text style={styles.emptyText}>\r\n              Search for songs and add them to your favorites to see them here\r\n            </Text>\r\n            <TouchableOpacity\r\n              style={styles.searchButton}\r\n              onPress={() => navigation.navigate('Search')}\r\n            >\r\n              <Text style={styles.searchButtonText}>Start Searching</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        }\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  centerContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  loadingText: {\r\n    color: '#888',\r\n    fontSize: 16,\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 4,\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#888',\r\n  },\r\n  favoriteItem: {\r\n    flexDirection: 'row',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333',\r\n    alignItems: 'center',\r\n  },\r\n  thumbnail: {\r\n    width: 80,\r\n    height: 60,\r\n    borderRadius: 8,\r\n    marginRight: 12,\r\n  },\r\n  songInfo: {\r\n    flex: 1,\r\n  },\r\n  songTitle: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    marginBottom: 4,\r\n  },\r\n  channelTitle: {\r\n    color: '#888',\r\n    fontSize: 14,\r\n    marginBottom: 2,\r\n  },\r\n  dateAdded: {\r\n    color: '#666',\r\n    fontSize: 12,\r\n  },\r\n  removeButton: {\r\n    width: 30,\r\n    height: 30,\r\n    backgroundColor: '#333',\r\n    borderRadius: 15,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  removeButtonText: {\r\n    color: '#ff4444',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n  },\r\n  emptyState: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 40,\r\n  },\r\n  emptyIcon: {\r\n    fontSize: 60,\r\n    marginBottom: 20,\r\n  },\r\n  emptyTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  emptyText: {\r\n    fontSize: 16,\r\n    color: '#888',\r\n    textAlign: 'center',\r\n    lineHeight: 24,\r\n    marginBottom: 30,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 30,\r\n    paddingVertical: 15,\r\n    borderRadius: 25,\r\n  },\r\n  searchButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});","import axios from 'axios';\r\nimport Constants from 'expo-constants';\r\n\r\nconst API_KEY = Constants.expoConfig?.extra?.YOUTUBE_API_KEY;\r\n\r\nexport const searchYouTube = async (query: string) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${encodeURIComponent(\r\n        query\r\n      )}&type=video&key=${API_KEY}`\r\n    );\r\n    return response.data.items.map((item: any) => ({\r\n      id: item.id.videoId,\r\n      title: item.snippet.title,\r\n      thumbnail: item.snippet.thumbnails.medium?.url || item.snippet.thumbnails.default.url,\r\n      channelTitle: item.snippet.channelTitle,\r\n      publishedAt: item.snippet.publishedAt,\r\n    }));\r\n  } catch (error) {\r\n    console.error('YouTube search error:', error);\r\n    throw new Error('Failed to search YouTube');\r\n  }\r\n};","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Alert, FlatList, Image, StyleSheet, Text,\r\n  TextInput,\r\n  TouchableOpacity, View\r\n} from 'react-native';\r\nimport { searchYouTube } from '../api/youtube';\r\nimport { RootStackParamList } from '../navigation/types';\r\n\r\ntype SearchScreenNavigationProp = NativeStackNavigationProp<\r\n  RootStackParamList,\r\n  'Search'\r\n>;\r\n\r\ninterface SearchResult {\r\n  id: string;\r\n  title: string;\r\n  thumbnail: string;\r\n  channelTitle: string;\r\n}\r\n\r\nexport default function SearchScreen() {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState<SearchResult[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [favorites, setFavorites] = useState<string[]>([]);\r\n  const navigation = useNavigation<SearchScreenNavigationProp>();\r\n\r\n  // Load favorites on component mount\r\n  React.useEffect(() => {\r\n    loadFavorites();\r\n  }, []);\r\n\r\n  const loadFavorites = async () => {\r\n    try {\r\n      const savedFavorites = await AsyncStorage.getItem('favorites');\r\n      if (savedFavorites) {\r\n        const favoritesData = JSON.parse(savedFavorites);\r\n        setFavorites(favoritesData.map((fav: any) => fav.id));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading favorites:', error);\r\n    }\r\n  };\r\n\r\n  const toggleFavorite = async (item: SearchResult) => {\r\n    try {\r\n      const savedFavorites = await AsyncStorage.getItem('favorites');\r\n      let favoritesData = savedFavorites ? JSON.parse(savedFavorites) : [];\r\n      \r\n      const isAlreadyFavorite = favoritesData.some((fav: any) => fav.id === item.id);\r\n      \r\n      if (isAlreadyFavorite) {\r\n        // Remove from favorites\r\n        favoritesData = favoritesData.filter((fav: any) => fav.id !== item.id);\r\n        setFavorites(favorites.filter(id => id !== item.id));\r\n        Alert.alert('Removed', 'Song removed from favorites');\r\n      } else {\r\n        // Add to favorites\r\n        const favoriteItem = {\r\n          id: item.id,\r\n          title: item.title,\r\n          thumbnail: item.thumbnail,\r\n          channelTitle: item.channelTitle,\r\n          dateAdded: new Date().toISOString(),\r\n        };\r\n        favoritesData.push(favoriteItem);\r\n        setFavorites([...favorites, item.id]);\r\n        Alert.alert('Added', 'Song added to favorites');\r\n      }\r\n      \r\n      await AsyncStorage.setItem('favorites', JSON.stringify(favoritesData));\r\n    } catch (error) {\r\n      console.error('Error toggling favorite:', error);\r\n      Alert.alert('Error', 'Failed to update favorites');\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!query.trim()) {\r\n      Alert.alert('Error', 'Please enter a search term');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const searchResults = await searchYouTube(query);\r\n      setResults(searchResults);\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to search. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectSong = (item: SearchResult) => {\r\n    // Convert YouTube video ID to full URL format expected by ChordPlayerScreen\r\n    const youtubeUrl = `https://www.youtube.com/watch?v=${item.id}`;\r\n    \r\n    navigation.navigate('ChordPlayer', {\r\n      youtubeUrl,\r\n      songTitle: item.title,\r\n      thumbnail: item.thumbnail,\r\n      channel: item.channelTitle,\r\n      chords: [], // Empty chords array - will be analyzed by ChordPlayerScreen\r\n    });\r\n  };\r\n\r\n  const renderSearchResult = ({ item }: { item: SearchResult }) => {\r\n    const isFavorite = favorites.includes(item.id);\r\n    \r\n    return (\r\n      <TouchableOpacity\r\n        style={styles.resultItem}\r\n        onPress={() => handleSelectSong(item)}\r\n      >\r\n        <Image source={{ uri: item.thumbnail }} style={styles.thumbnail} />\r\n        <View style={styles.resultInfo}>\r\n          <Text style={styles.resultTitle} numberOfLines={2}>\r\n            {item.title}\r\n          </Text>\r\n          <Text style={styles.resultChannel} numberOfLines={1}>\r\n            {item.channelTitle}\r\n          </Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          style={styles.favoriteButton}\r\n          onPress={() => toggleFavorite(item)}\r\n        >\r\n          <Text style={[styles.favoriteIcon, isFavorite && styles.favoriteIconActive]}>\r\n            {isFavorite ? '❤️' : '🤍'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.searchContainer}>\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Search for songs...\"\r\n          placeholderTextColor=\"#888\"\r\n          value={query}\r\n          onChangeText={setQuery}\r\n          onSubmitEditing={handleSearch}\r\n        />\r\n        <TouchableOpacity\r\n          style={[styles.searchButton, loading && styles.searchButtonDisabled]}\r\n          onPress={handleSearch}\r\n          disabled={loading}\r\n        >\r\n          <Text style={styles.searchButtonText}>\r\n            {loading ? 'Searching...' : 'Search'}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={results}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={renderSearchResult}\r\n        style={styles.resultsList}\r\n        showsVerticalScrollIndicator={false}\r\n        ListEmptyComponent={\r\n          <View style={styles.emptyContainer}>\r\n            <Text style={styles.emptyText}>\r\n              {loading ? 'Searching...' : 'Search for your favorite songs'}\r\n            </Text>\r\n          </View>\r\n        }\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    padding: 16,\r\n    gap: 12,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    fontSize: 16,\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#007AFF',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n  },\r\n  searchButtonDisabled: {\r\n    backgroundColor: '#555',\r\n  },\r\n  searchButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  resultsList: {\r\n    flex: 1,\r\n  },\r\n  resultItem: {\r\n    flexDirection: 'row',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333',\r\n    alignItems: 'center',\r\n  },\r\n  thumbnail: {\r\n    width: 80,\r\n    height: 60,\r\n    borderRadius: 8,\r\n    marginRight: 12,\r\n  },\r\n  resultInfo: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  resultTitle: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    marginBottom: 4,\r\n  },\r\n  resultChannel: {\r\n    color: '#888',\r\n    fontSize: 14,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingTop: 100,\r\n  },\r\n  emptyText: {\r\n    color: '#888',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n  },\r\n  favoriteButton: {\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n  favoriteIcon: {\r\n    fontSize: 24,\r\n  },\r\n  favoriteIconActive: {\r\n    fontSize: 24,\r\n  },\r\n});","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Alert,\r\n    ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View\r\n} from 'react-native';\r\nimport { useAuth } from '../context/AuthProvider';\r\n\r\nexport default function SettingsScreen() {\r\n  const [darkMode, setDarkMode] = useState(true); // Default to dark mode\r\n  const [notifications, setNotifications] = useState(true);\r\n  const { user, logout } = useAuth();\r\n\r\n  const handleLogout = () => {\r\n    Alert.alert(\r\n      'Logout',\r\n      'Are you sure you want to logout?',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        { text: 'Logout', style: 'destructive', onPress: logout },\r\n      ]\r\n    );\r\n  };\r\n\r\n  const clearCache = async () => {\r\n    Alert.alert(\r\n      'Clear Cache',\r\n      'This will remove all cached data including favorites. Continue?',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        {\r\n          text: 'Clear',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              await AsyncStorage.clear();\r\n              Alert.alert('Success', 'Cache cleared successfully');\r\n            } catch (error) {\r\n              Alert.alert('Error', 'Failed to clear cache');\r\n            }\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  const SettingItem = ({ \r\n    title, \r\n    subtitle, \r\n    onPress, \r\n    showSwitch = false, \r\n    switchValue = false, \r\n    onSwitchChange \r\n  }: {\r\n    title: string;\r\n    subtitle?: string;\r\n    onPress?: () => void;\r\n    showSwitch?: boolean;\r\n    switchValue?: boolean;\r\n    onSwitchChange?: (value: boolean) => void;\r\n  }) => (\r\n    <TouchableOpacity\r\n      style={styles.settingItem}\r\n      onPress={onPress}\r\n      disabled={showSwitch}\r\n    >\r\n      <View style={styles.settingContent}>\r\n        <Text style={styles.settingTitle}>{title}</Text>\r\n        {subtitle && <Text style={styles.settingSubtitle}>{subtitle}</Text>}\r\n      </View>\r\n      {showSwitch && (\r\n        <Switch\r\n          value={switchValue}\r\n          onValueChange={onSwitchChange}\r\n          trackColor={{ false: '#333', true: '#007AFF' }}\r\n          thumbColor=\"#fff\"\r\n        />\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerTitle}>Settings</Text>\r\n        <Text style={styles.headerSubtitle}>\r\n          Signed in as {user?.email}\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Appearance</Text>\r\n        <SettingItem\r\n          title=\"Dark Mode\"\r\n          subtitle=\"Use dark theme throughout the app\"\r\n          showSwitch\r\n          switchValue={darkMode}\r\n          onSwitchChange={setDarkMode}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Notifications</Text>\r\n        <SettingItem\r\n          title=\"Push Notifications\"\r\n          subtitle=\"Get notified about new features and updates\"\r\n          showSwitch\r\n          switchValue={notifications}\r\n          onSwitchChange={setNotifications}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Data & Storage</Text>\r\n        <SettingItem\r\n          title=\"Clear Cache\"\r\n          subtitle=\"Remove cached data and favorites\"\r\n          onPress={clearCache}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Legal & Privacy</Text>\r\n        <SettingItem\r\n          title=\"Terms of Service\"\r\n          subtitle=\"Read our terms and conditions\"\r\n          onPress={() => Alert.alert('Terms of Service', 'Please visit our website or check the legal folder in the app documentation for the complete Terms of Service.')}\r\n        />\r\n        <SettingItem\r\n          title=\"Privacy Policy\"\r\n          subtitle=\"How we protect your data\"\r\n          onPress={() => Alert.alert('Privacy Policy', 'Please visit our website or check the legal folder in the app documentation for our complete Privacy Policy.')}\r\n        />\r\n        <SettingItem\r\n          title=\"App Version\"\r\n          subtitle=\"2.0.0 - Pi Network Ready\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Pi Network Integration</Text>\r\n        <SettingItem\r\n          title=\"Connect Pi Wallet\"\r\n          subtitle=\"Coming soon - Connect your Pi Network account\"\r\n          onPress={() => Alert.alert('Coming Soon', 'Pi Network integration will be available when Pi Network launches their mainnet')}\r\n        />\r\n      </View>\r\n\r\n      <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n        <Text style={styles.logoutText}>Logout</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1a1a1a',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#333',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 4,\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: '#888',\r\n  },\r\n  section: {\r\n    marginTop: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginBottom: 10,\r\n    marginHorizontal: 20,\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 15,\r\n    backgroundColor: '#2a2a2a',\r\n    marginHorizontal: 20,\r\n    marginBottom: 2,\r\n    borderRadius: 8,\r\n  },\r\n  settingContent: {\r\n    flex: 1,\r\n  },\r\n  settingTitle: {\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    color: '#fff',\r\n    marginBottom: 2,\r\n  },\r\n  settingSubtitle: {\r\n    fontSize: 14,\r\n    color: '#888',\r\n  },\r\n  logoutButton: {\r\n    margin: 20,\r\n    padding: 15,\r\n    backgroundColor: '#333',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n  },\r\n  logoutText: {\r\n    color: '#ff4444',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});","// src/navigation/RootStack.tsx\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport React from 'react';\r\nimport AuthScreen from '../screens/AuthScreen';\r\nimport ChordPlayerScreen from '../screens/ChordPlayerScreen';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport LibraryScreen from '../screens/LibraryScreen';\r\nimport SearchScreen from '../screens/SearchScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function RootStack() {\r\n  return (\r\n    <Stack.Navigator \r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: '#4CAF50',\r\n        },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen \r\n        name=\"Home\" \r\n        component={HomeScreen} \r\n        options={{ title: '🎵 ChordsLegend' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Search\" \r\n        component={SearchScreen} \r\n        options={{ title: '🔍 Search' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Settings\" \r\n        component={SettingsScreen} \r\n        options={{ title: '⚙️ Settings' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"ChordPlayer\" \r\n        component={ChordPlayerScreen} \r\n        options={{ title: '🎸 Chord Player' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Library\" \r\n        component={LibraryScreen} \r\n        options={{ title: '❤️ My Favorites' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Auth\" \r\n        component={AuthScreen} \r\n        options={{ title: '🔐 Sign In' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}","import { registerRootComponent } from 'expo';\nimport App from './App';\n\n// Register the root component\nregisterRootComponent(App);","import { NavigationContainer } from '@react-navigation/native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { AuthProvider } from './src/context/AuthProvider';\r\n// import { MockAuthProvider as AuthProvider } from './src/context/MockAuthProvider';\r\nimport { PI_CONFIG } from './src/config/piConfig';\r\nimport RootStack from './src/navigation/RootStack';\r\n\r\nexport default function App() {\r\n  const [isPiEnvironment, setIsPiEnvironment] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initialize Pi Browser integration if running in Pi environment\r\n    const initPi = async () => {\r\n      const isPiBrowser = PI_CONFIG.isPiBrowser();\r\n      setIsPiEnvironment(isPiBrowser);\r\n      \r\n      if (isPiBrowser) {\r\n        console.log('ChordsLegend running in Pi Browser environment');\r\n        console.log('Sandbox mode:', PI_CONFIG.SANDBOX_MODE);\r\n        console.log('Environment:', PI_CONFIG.ENVIRONMENT);\r\n        \r\n        // Initialize Pi SDK if available\r\n        if (typeof window !== 'undefined' && window.Pi) {\r\n          try {\r\n            await window.Pi.init({\r\n              version: PI_CONFIG.SDK_CONFIG.version,\r\n              sandbox: PI_CONFIG.SDK_CONFIG.sandbox\r\n            });\r\n            console.log('Pi SDK initialized successfully');\r\n          } catch (error) {\r\n            console.error('Pi SDK initialization failed:', error);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    initPi();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <NavigationContainer>\r\n        <RootStack />\r\n      </NavigationContainer>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [273], () => (__webpack_require__(3470)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["firebaseConfig","_Constants$expoConfig","fromConstants","Constants","expoConfig","extra","apiKey","FIREBASE_API_KEY","process","EXPO_PUBLIC_FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN","projectId","FIREBASE_PROJECT_ID","EXPO_PUBLIC_FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_APP_ID","EXPO_PUBLIC_FIREBASE_APP_ID","getFirebaseConfig","console","log","_objectSpread","substring","_Constants$expoConfig3","app","auth","_Constants$expoConfig2","Object","keys","filter","k","includes","config","missing","key","length","error","validateFirebaseConfig","getApps","initializeApp","getAuth","Error","message","String","testFirebaseConnection","_ref","_asyncToGenerator","options","testUrl","response","fetch","method","headers","body","JSON","stringify","status","errorText","text","networkError","mode","cache","internetError","authInstance","fallbackError","apply","arguments","getAuthInstance","AuthContext","createContext","user","isLoading","login","_login","signUp","_signUp","logout","_logout","clearError","isConnected","forceConnectionState","AuthProvider","children","_useState","useState","_useState2","_slicedToArray","setUser","_useState3","_useState4","setIsLoading","_useState5","_useState6","setError","_useState7","_useState8","setIsConnected","providerInstanceId","Math","random","toString","useEffect","checkConnection","_ref2","unsubscribe","onAuthStateChanged","email","authError","connectionTest","testError","useCallback","_ref3","password","userCredential","signInWithEmailAndPassword","code","errorMessage","getFirebaseErrorMessage","_x","_x2","_ref4","createUserWithEmailAndPassword","_x3","_x4","signOut","value","connected","_jsx","Provider","useAuth","context","useContext","debugInfo","timestamp","Date","toLocaleTimeString","PI_CONFIG","APP_NAME","APP_USERNAME","SANDBOX_MODE","ENVIRONMENT","window","location","href","API_KEY","PI_API_KEY","SANDBOX_URL","SANDBOX_API_BASE","isPiBrowser","navigator","userAgent","hostname","undefined","Pi","SDK_CONFIG","version","sandbox","environment","APP_CONFIG","appName","developerId","appSecret","PI_APP_SECRET","scopes","SANDBOX_FEATURES","TEST_PREMIUM","price","name","description","FEATURES","PREMIUM_CHORD_LIBRARY","AI_CHORD_DETECTION","YOUTUBE_SYNC","OFFLINE_MODE","URLS","DEVELOPER_PORTAL","APP_DETAILS","PI_BROWSER","AuthScreen","navigation","useNavigation","useRoute","params","setEmail","setPassword","isLogin","setIsLogin","loading","setLoading","_useState9","general","_useState0","errors","setErrors","_useState1","_useState10","successMessage","setSuccessMessage","_useAuth","setTimeout","replace","prev","handleAuth","trim","test","validateEmail","passwordError","validatePassword","KeyboardAvoidingView","style","styles","container","behavior","Platform","OS","ScrollView","contentContainerStyle","scrollContainer","_jsxs","View","formContainer","Text","title","subtitle","statusContainer","statusText","color","modeToggle","TouchableOpacity","modeButton","modeButtonActive","onPress","modeButtonText","modeButtonTextActive","successContainer","successText","errorContainer","TextInput","input","inputError","placeholder","placeholderTextColor","onChangeText","keyboardType","autoCapitalize","autoComplete","fieldErrorText","secureTextEntry","passwordRequirements","requirementsTitle","requirementText","requirementMet","button","buttonDisabled","buttonWarning","disabled","loadingContainer","ActivityIndicator","size","buttonText","alternativeLogin","alternativeText","socialButtons","socialButton","socialButtonText","comingSoon","StyleSheet","create","flex","backgroundColor","justifyContent","padding","marginHorizontal","fontSize","fontWeight","textAlign","marginBottom","borderRadius","borderWidth","borderColor","alignItems","marginTop","flexDirection","gap","flexGrow","debugToggle","debugToggleText","debugContainer","maxHeight","debugTitle","clearLogsButton","clearLogsText","debugLogs","debugLogText","fontFamily","paddingVertical","marginLeft","opacity","paddingHorizontal","fontStyle","API_CONFIG","EXPO_PUBLIC_API_URL","API_URL","toError","analyzeChords","youtubeUrl","controller","AbortController","timeoutId","abort","_ret","lastError","_loop","attempt","youtube_url","detailed","signal","clearTimeout","ok","errorData","_tryParseError","tryParseError","data","json","chords","v","map","chord","index","time","confidence","Number","min","max","duration","beat","DOMException","Promise","resolve","normalizedError","stack","toISOString","enhanceError","_unused","lightTheme","primary","secondary","background","surface","surfaceHighlight","secondaryText","onPrimary","divider","ThemeContext","theme","isDark","setTheme","CHORD_LIBRARY","fingerings","frets","fingers","type","barres","fret","startString","endString","baseFret","margin","overflow","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","header","borderBottomWidth","borderBottomColor","timeIndicator","timeline","timelineContent","chordItem","marginRight","position","progressBar","top","left","right","progressFill","chordName","timeText","durationText","playingIndicator","playingIcon","nextLabel","bottom","controls","borderTopWidth","borderTopColor","positionText","globalProgress","globalProgressFill","chordProgression","currentTime","isPlaying","onSeekToTime","scrollViewRef","useRef","toFixed","current","currentIndex","findIndex","nextChord","startTime","currentChord","scrollPosition","scrollTo","x","animated","formatTime","seconds","floor","padStart","currentChordIndex","ref","horizontal","showsHorizontalScrollIndicator","isActive","isPast","isNext","isUpcoming","progress","currentInfo","sheetScroll","sheetContent","paddingLeft","paddingRight","measure","measureNumber","beatsRow","chordSymbol","beatIndicator","beatNumber","playingPulse","rhythmSheet","beats","totalDuration","_toConsumableArray","c","totalBeats","ceil","beatTime","beatIndex","activeChord","find","isChordChange","some","abs","push","generateRhythmSheet","currentBeatIndex","currentBeat","currentMeasure","isActiveBeat","isUpcomingBeat","isPastBeat","measures","forEach","getMeasures","measureNumbers","sort","a","b","transform","scale","renderMeasure","_Dimensions$get","Dimensions","get","screenWidth","Fretboard","_fingering$barres","fingering","onFingeringChange","_ref$size","_ref$isHighlighted","isHighlighted","_ref$animationDelay","animationDelay","strings","dimensions","baseWidth","stringSpacing","fretSpacing","dotSize","getSizeDimensions","highlightAnim","Animated","Value","pulseAnim","parallel","timing","toValue","useNativeDriver","loop","sequence","iterations","start","stopAnimation","fretboardContainer","interpolate","inputRange","outputRange","extrapolate","fretboardBackground","chordNameTop","nut","Array","from","maxFrets","_","fretIndex","fretLine","stringName","stringIndex","stringThickness","stringLine","stringLabel","baseFretNumber","openStringIndicator","mutedIndicator","_fingering$fingers","fretPosition","y","fingerNumber","fingerDot","barre","startY","endY","barreIndicator","fingeringType","YoutubeIframe","require","e","UnifiedYouTubePlayer","React","videoId","_ref$height","_ref$width","_ref$playing","playing","onChangeState","onError","onTimeUpdate","onPlayingChange","_ref$autoplay","autoplay","_ref$muted","muted","_ref$loop","_ref$controls","setCurrentTime","isPlayerPlaying","setIsPlayerPlaying","timeUpdateInterval","startPlayTime","startTimeTracking","clearInterval","now","setInterval","iframe","document","querySelector","contentWindow","postMessage","warn","elapsed","stopTimeTracking","seekToTime","handlePlayStateChange","shouldPlay","handleMessage","event","parse","info","addEventListener","removeEventListener","useImperativeHandle","play","pause","seekTo","getCurrentTime","_getCurrentTime","onStateChange","state","onPlayerError","URLSearchParams","mute","rel","modestbranding","playsinline","enablejsapi","origin","isValidVideoId","src","frameBorder","allow","allowFullScreen","onLoad","debugOverlay","debugText","fallback","fallbackTitle","fallbackText","fallbackSubText","fallbackHint","allowWebViewZoom","webViewStyle","initialPlayerParams","webView","borderStyle","zIndex","SynchronizedChordPlayer","songTitle","onBack","setIsPlaying","setCurrentChordIndex","isLooping","setIsLooping","fingeringStyle","setFingeringStyle","fingeringLocked","setFingeringLocked","_useState11","_useState12","showFingeringModal","setShowFingeringModal","_useState13","_useState14","fretboardSize","setFretboardSize","_useState15","_useState16","forcePlayerState","setForcePlayerState","_useState17","_useState18","timingOffset","setTimingOffset","playerRef","getCurrentChord","adjustedTime","chordEndTime","isInTimeRange","getNextChord","activeChordIndex","_chordProgression","total","chordStart","chordEnd","handlePlayerTimeUpdate","handlePlayerStateChange","getChordFingering","chordDef","result","f","backButton","backButtonText","numberOfLines","content","playerContainer","controlButton","controlButtonText","offset","CompactRhythmTimeline","EmbeddedRhythmSheet","currentFingering","nextFingering","chordDisplay","currentNextContainer","currentChordSection","currentChordLabel","nextChordSection","nextChordLabel","nextChordName","nextChordTime","nextFretboardContainer","charAt","toUpperCase","slice","sizeControls","sizeButton","sizeButtonText","nextChordPreview","Modal","visible","transparent","animationType","onRequestClose","modalOverlay","modalContent","modalHeader","modalTitle","closeButton","closeButtonText","FlatList","keyExtractor","item","renderItem","fingeringOption","fingeringPreview","fingeringLabel","renderFingeringModal","paddingTop","minWidth","progressContainer","chordProgressItem","chordProgressText","chordTimeText","chordPreviewSection","sectionTitle","chordPreviewContainer","chordPreviewItem","previewChordName","previewTimeText","miniatureFretboard","textTransform","nextIndicator","progressIndicator","progressText","loadingText","loadingSubtext","errorSubtext","route","_route$params","thumbnail","channel","setChordProgression","isAnalyzing","setIsAnalyzing","generateRealisticProgression","songStructures","intro","verse","chorus","bridge","outro","silencePeriods","end","toLowerCase","structure","fullProgression","isInSilencePeriod","period","chordDuration","rand","filteredChords","t","analyzeVideo","chordData","realisticProgression","chordTiming","convertToChordTiming","url","match","getVideoId","goBack","HomeScreen","_user$email","welcomeText","split","quickActions","actionButton","navigate","actionIcon","actionText","section","howItWorks","step","stepNumber","stepText","sectionSubtitle","featuredItem","featuredImage","featuredTitle","debugButton","lineHeight","LibraryScreen","favorites","setFavorites","useFocusEffect","loadFavorites","savedFavorites","AsyncStorage","getItem","removeFavorite","songId","Alert","alert","_onPress","updatedFavorites","song","id","setItem","centerContainer","headerTitle","headerSubtitle","favoriteItem","channelTitle","Image","source","uri","songInfo","dateAdded","toLocaleDateString","removeButton","removeButtonText","emptyContainer","ListEmptyComponent","emptyState","emptyIcon","emptyTitle","emptyText","searchButton","searchButtonText","YOUTUBE_API_KEY","searchYouTube","query","axios","encodeURIComponent","items","_item$snippet$thumbna","snippet","thumbnails","medium","default","publishedAt","SearchScreen","setQuery","results","setResults","favoritesData","fav","toggleFavorite","concat","handleSearch","searchResults","searchContainer","searchInput","onSubmitEditing","searchButtonDisabled","isFavorite","resultItem","handleSelectSong","resultInfo","resultTitle","resultChannel","favoriteButton","favoriteIcon","favoriteIconActive","resultsList","showsVerticalScrollIndicator","SettingsScreen","darkMode","setDarkMode","notifications","setNotifications","clearCache","clear","SettingItem","_ref2$showSwitch","showSwitch","_ref2$switchValue","switchValue","onSwitchChange","settingItem","settingContent","settingTitle","settingSubtitle","Switch","onValueChange","trackColor","false","true","thumbColor","logoutButton","logoutText","Stack","createNativeStackNavigator","RootStack","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","ChordPlayerScreen","registerRootComponent","setIsPiEnvironment","initPi","init","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","this","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}